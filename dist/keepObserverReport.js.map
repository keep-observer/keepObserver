{"version":3,"file":"keepObserverReport.js","sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap c68d161effd90163ce5f?e1f8","webpack:///src/tool/index.js?2d97","webpack:///src/default/index.js?245b","webpack:///src/constants/index.js?bc15","webpack:///src/services/report/api.js","webpack:///src/services/report/defaultConfig.js","webpack:///src/services/report/handle.js","webpack:///src/services/report/report.js","webpack:///src/services/report/ajax.js","webpack:///src/services/report/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 36);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c68d161effd90163ce5f","/**\n * 根据时间搓 返回时间\n * @param date format\n * @return string\n */\nexport function dateFormat(date, format) {\n    if (!format || typeof format !== 'string') {\n        console.error('format is undefiend or type is Error');\n        return '';\n    }\n    date = date instanceof Date ? date : (typeof date === 'number' || typeof date === 'string') ? new Date(date) : new Date();\n    //解析\n    var formatReg = {\n        'y+': date.getFullYear(),\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n    }\n    for (var reg in formatReg) {\n        if (new RegExp(reg).test(format)) {\n            var match = RegExp.lastMatch;\n            format = format.replace(match, formatReg[reg] < 10 ? '0' + formatReg[reg] : formatReg[reg].toString());\n        }\n    }\n    return format;\n}\n\n\n/**\n * 检查script基本数据类型\n * @param mixed value\n * @return boolean\n */\nexport function isNumber(value) {\n    return Object.prototype.toString.call(value) == '[object Number]';\n}\nexport function isString(value) {\n    return Object.prototype.toString.call(value) == '[object String]';\n}\nexport function isArray(value) {\n    return Object.prototype.toString.call(value) == '[object Array]';\n}\nexport function isBoolean(value) {\n    return Object.prototype.toString.call(value) == '[object Boolean]';\n}\nexport function isUndefined(value) {\n    return value === undefined;\n}\nexport function isNull(value) {\n    return value === null;\n}\nexport function isSymbol(value) {\n    return Object.prototype.toString.call(value) == '[object Symbol]';\n}\nexport function isObject(value) {\n    return (\n        Object.prototype.toString.call(value) == '[object Object]' ||\n        // if it isn't a primitive value, then it is a common object\n        (!isNumber(value) &&\n            !isString(value) &&\n            !isBoolean(value) &&\n            !isArray(value) &&\n            !isNull(value) &&\n            !isFunction(value) &&\n            !isUndefined(value) &&\n            !isSymbol(value)\n        )\n    );\n}\nexport function isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return true;\n    }\n    for (var key in obj) {\n        return false;\n    }\n    return true\n}\nexport function isEmptyArray(array) {\n    if (!isArray(array)) {\n        return true\n    }\n    return array.length > 0 ? false : true\n}\nexport function isFunction(value) {\n    return Object.prototype.toString.call(value) == '[object Function]';\n}\nexport function isElement(value) {\n    return (\n        typeof HTMLElement === 'object' ? value instanceof HTMLElement : //DOM2\n        value && typeof value === \"object\" && value !== null && value.nodeType === 1 && typeof value.nodeName === \"string\"\n    );\n}\nexport function isWindow(value) {\n    var toString = Object.prototype.toString.call(value);\n    return toString == '[object global]' || toString == '[object Window]' || toString == '[object DOMWindow]';\n}\n/**\n * 检查是否是普通空对象\n * @param object obj\n * @return boolean\n */\nexport function isPlainObject(obj) {\n    var hasOwn = Object.prototype.hasOwnProperty;\n    // Must be an Object.\n    if (!obj || typeof obj !== 'object' || obj.nodeType || isWindow(obj)) {\n        return false;\n    }\n    try {\n        if (obj.constructor && !hasOwn.call(obj, 'constructor') && !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n            return false;\n        }\n    } catch (e) {\n        return false;\n    }\n    var key;\n    for (key in obj) {}\n    return key === undefined || hasOwn.call(obj, key);\n}\n\n\n/*\n  转换工具\n */\nexport function toArray(array) {\n    return Array.prototype.slice.call(array)\n}\nexport function toString(content) {\n    if (!content) {\n        return '';\n    }\n    if (typeof content === 'string') {\n        return content\n    }\n    return content.toString()\n}\n\n\n\n/*\n    辅助存储保存监控数据\n    localStorage\n*/\nexport function setStorage(key, value) {\n    if (!window.localStorage) {\n        return;\n    }\n    key = 'keepObserverData_' + key;\n    value = JSON.stringify(value)\n    localStorage.setItem(key, value);\n}\nexport function getStorage(key) {\n    if (!window.localStorage) {\n        return;\n    }\n    key = 'keepObserverData_' + key;\n    var value = localStorage.getItem(key)\n    return value ? JSON.parse(value) : '';\n}\nexport function removeStorage(key) {\n    if (!window.localStorage) {\n        return;\n    }\n    key = 'keepObserverData_' + key;\n    localStorage.removeItem(key);\n}\n\n\n\n\n\n/*\n    深度合并内容\n    引用类型克隆合并\n    arguments[0] = target\n    arguments type is Object Or Array\n    多内容合并覆盖优先级: arguments[0]<arguments[1]<arguments[2]..\n    如果sources 不是数组或者对象 则直接忽略\n */\nexport function extend() {\n    var args = toArray(arguments);\n    if (args.length === 0) {\n        console.error('extends params is undefined')\n        return {};\n    }\n    if (args.length === 1) {\n        return args[0]\n    }\n    var target = args[0];\n    var sources = args.slice(1, args.length)\n\n    if (!isObject(target) && !isArray(target)) {\n        target = {};\n    }\n    sources.map(function(item) {\n        //防止死循环\n        if (target === item) {\n            return false;\n        }\n        //如果内容是对象 \n        if (isObject(item)) {\n            //开始遍历\n            for (var key in item) {\n                //如果内容是对象\n                if (isObject(item[key])) {\n                    //修正数据\n                    target[key] = (target[key] && isObject(target[key])) ? target[key] : {};\n                    target[key] = extend(target[key], item[key])\n                } else if (isArray(item[key])) {\n                    //修正数据\n                    target[key] = (target[key] && isArray(target[key])) ? target[key] : [];\n                    target[key] = extend(target[key], item[key])\n                } else {\n                    //基本类型直接赋值\n                    target[key] = item[key]\n                }\n            }\n        } else if (isArray(item)) {\n            for (var i = 0; i < item.length; i++) {\n                //如果内容是对象\n                if (isObject(item[i])) {\n                    //修正数据\n                    target[i] = (target[i] && isObject(target[i])) ? target[i] : {}\n                    target[i] = extend(target[i], item[i])\n                } else if (isArray(item[i])) {\n                    //修正数据\n                    target[i] = (target[i] && isArray(target[i])) ? target[i] : [];\n                    target[i] = extend(target[i], item[i])\n                } else {\n                    //基本类型直接赋值\n                    target[i] = item[i]\n                }\n            }\n        }\n        //其他类型直接忽略  \n    })\n    return target\n}\n\n\n// WEBPACK FOOTER //\n// src/tool/index.js","import * as tool from '../tool/index.js'\n\n//公共默认类\n//提供一些全局公共方法\nclass KeepObserverDefault {\n\n    constructor(config) {\n        //开发模式下的log 替换window.console.log\n        this.$devLog = false;\n        //开发模式写error log 替换window.console.error\n        this.$devError = false;\n\n        this._keeepObserverDetaultInit();\n    }\n\n\n    _keeepObserverDetaultInit() {\n        var that = this;\n        //初始化$devLog\n        that.$devLog = window.console.log\n        window.console.log = (...args) => {\n            that.$devLog.apply(window.console, args);\n        };\n        //初始化$devError\n        that.$devError = window.console.error\n        window.console.error = (...args) => {\n            that.$devError.apply(window.console, args);\n        };\n        //初始化$devWarn\n        that.$devWarn = window.console.warn\n        window.console.warn = (...args) => {\n            that.$devWarn.apply(window.console, args);\n        };\n    }\n\n\n\n    $mixin(provider) {\n        if (!provider || !tool.isObject(provider) || tool.isEmptyObject(provider)) {\n            this.$error('keepObserver $mixin receive params not right')\n        }\n        for (var key in provider) {\n            if (this[key]) {\n                continue\n            }\n            this[key] = provider[key]\n        }\n    }\n\n}\n\n\n\n\n\n\nexport default KeepObserverDefault;\n\n\n// WEBPACK FOOTER //\n// src/default/index.js","//上报数据类型\nexport const reportType = ['unKownType', 'log', 'network', 'vue'];\n//版本号\nexport const version = '1.1.0';\n\n\n// WEBPACK FOOTER //\n// src/constants/index.js","import * as tool from '../../tool/index.js';\n\n\n/*\n    \t接受自定义上报内容\n    \tmodel1: arguments[0]  type object  \n    \tmodel2: arguments[0]  type boolean  \n    \t\t\twill extend preData  arguments[...]=extend data\n    \t合并到this._customeInfo中\n     */\nexport var $setCustomeReportData = function(params) {\n    var that = this;\n    //判断数据正确性\n    var args = tool.toArray(arguments);\n    if (!args || args.length === 0) {\n        return false;\n    }\n    if (!that._customeInfo) {\n        that._customeInfo = {};\n    }\n    var params = args[0]\n        //如果是普通添加\n    if (tool.isObject(params) && !tool.isEmptyObject(params)) {\n        //设置用户自定义上报内容\n        that._customeInfo = tool.extend(that._customeInfo, params);\n        return false;\n    }\n    //如果是修改并覆盖之前的数据\n    if (tool.isBoolean(params) && params && args.length > 1) {\n        params = args.slice(1, args.length);\n        params.map(function(item) {\n            if (tool.isObject(item) && !tool.isEmptyObject(item)) {\n                that._customeInfo = tool.extend(that._customeInfo, item);\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// src/services/report/api.js","import {\n    reportType\n} from '../../constants/index.js'\n\n\n\nexport default {\n    /******************** 公共相关配置 *******************/\n    //上报的类型\n    $observer_Type: reportType,\n    //如果取不到缓存长度的默认长度\n    max_cache: 3,\n\n\n    /******** observer-network相关配置   *********/\n    //默认network数组缓存长度\n    max_network_cache: 3,\n\n    /******** observer-log相关配置   *********/\n    //默认log数组缓存长度\n    max_log_cache: 5,\n    //默认vue数组缓存长度\n    max_vue_cache: 1,\n    //默认network数组缓存长度\n    max_network_cache: 3,\n\n\n\n\n\n    /*********************   上传相关   ********************/\n    //上传服务器的url列表  \t\tarray\n    reportUrl: false,\n    //上传失败回调\t\t\t\tfunction (reportInfo,reportUrl(有可能有))\n    onReportFail: false,\n    //上传前自定义设置url   \tfunction (reportUrl)   return new URl\n    onReportBeforeSetUrl: false,\n    //上传前自定义设置请求头， \tfunction (reportUrl)   return headData object\n    onReportBeforeSetHead: false,\n    //上传服务器前回调钩子  \tfunction (reportInfo,reportUrl,repHead)\n    onReportBeforeHook: false,\n    //上传服务器后返回处理钩子  \tfunction (resultInfo,reportUrl,resHead)\n    onReportResultHook: false,\n}\n\n\n// WEBPACK FOOTER //\n// src/services/report/defaultConfig.js","import * as tool from '../../tool/index.js';\n\n/*\n    receive the report data\n    params  \n    @object  = {\n        type:  string                   //类型,observer or performance    \n        typeName:  string               //类型名,vue  or log or network\n        location:string                 //捕获位置\n        environment:string              //运行环境信息\n        data:object                     //捕获数据\n        reportTime: int //捕获时间搓\n    }\n    @ .control null and object = {\n        @ .isReport:boolean                 //是否需要上报 内部reportServer需要使用\n        @ .lazy:boolean                     //是否懒上报, （手动trackExtend合并上报,或者trackExtend合并上报）,不立即上报\n        @ .trackExtend:boolean              //是否合并之前保存的lazy信息一起上报\n        @ .isError:boolean                  //是否是错误信息\n        @ .isPerformance:boolean            //是否是性能捕获分析\n        @ .preDelete:boolean                //是否删除之前的信息\n        @ .ignore:boolean                   //本条数据是否忽略\n    }\n*/\nexport var _getReportContent = function(params, control) {\n    //判断数据合法性\n    if (!params || !params.type || !params.typeName || !params.data || !tool.isObject(params.data)) {\n        this.$devLog('[keepObserver] reportServer receive reportData is not right')\n        return false;\n    }\n    if (!control) {\n        this.$deveWarn('[keepObserver] reportServer receive pipeDate control options is  undefined')\n        return false;\n    }\n    //是否是开发模式需要打印\n    if (this.develop && this.developGetMsgLog) {\n        var log = tool.extend({}, params)\n        log.title = '[keepObserver] get' + log.type + 'type:' + log.typeName + \" of monitor data\";\n        this.$devLog(log)\n    }\n    //是否删除之前保存的数据\n    if (params.type === 'observer' && control.preDelete) {\n        this._removeReportData(params.typeName)\n    }\n    //是否忽略本条数据\n    if (control.ignore) {\n        return false;\n    }\n    //是否懒上报\n    if (params.type === 'observer' && control.lazy) {\n        this._saveReportData(params);\n        return false;\n    }\n    if (control.isReport) {\n        //上报\n        this._handleReport(params, control);\n    }\n}\n\n\n\n\n\n/* \n\t保存处理上报数据\n\tparams type object\n\t@ .typeName string   \t  (no null)\t      上报类型名\n\t@ .data  array or object  (no null) \t  上报内容\n\t@ .lazy bollen          \t\t\t\t  是延时上报(由手动上传合并上报或者又下一次该上报合并上报) 不传立即上报\n\t**********************************\n\t# return  当前保存数据长度\n */\nexport var _saveReportData = function(params) {\n    var type = params.typeName\n        //如果没有该上报类型,那么属于未知内容\n    if (!this.reportData[type]) {\n        type = 'unKownType'\n    }\n    var reportData = this.reportData[type];\n    //是否延时上报,如果没有添加到上报数据中\n    var maxCache = this.$report_config['max_' + type + '_cache'];\n    maxCache = maxCache ? maxCache : this.$report_config['max_cache'];\n    //如果当前存储超过长度 那么弹出最早的数据\n    if (reportData.length + 1 > maxCache) {\n        var discard = reportData.shift();\n        //开发模式打印\n        if (this.develop && this.develogDiscardLog) {\n            discard.title = '[keepObserver] observer ' + type + 'type monitor data overstep cache limit will discard';\n            this.$devLog(discard)\n        }\n    }\n    reportData.push(params)\n    this.reportData[type] = reportData;\n    //保存到locationStorage中\n    tool.setStorage(type, reportData)\n}\n\n\n\n\n\n/*\n\t删除保存的上报数据\n\t@params type string    上报类型\n*/\nexport var _removeReportData = function(type) {\n    if (this.reportData[type]) {\n        this.reportData[type] = [];\n        tool.removeStorage(type)\n            //开发模式下打印\n        if (this.develop && this.develogDeleteLog) {\n            this._$devLog('[keepObserver] observer ' + type + 'type Of monitor data is clean up')\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// src/services/report/handle.js","import * as tool from '../../tool/index.js';\nimport AjaxServer from './ajax.js';\n\n\n\n\n/*\n    处理上报\n    params:\n    @params  = {\n        type:  string                   //类型,observer or performance    \n        typeName:  string               //类型名,vue  or log or network\n        location:string                 //捕获位置\n        environment:string              //运行环境信息\n        data:object                     //捕获数据\n        reportTime: int                 //捕获时间搓\n    }\n    @.control = {\n        @ .isReport:boolean                 //是否需要上报 内部reportServer需要使用\n        @ .lazy:boolean                     //是否懒上报, （手动trackExtend合并上报,或者trackExtend合并上报）,不立即上报\n        @ .trackExtend:boolean              //是否合并之前保存的lazy信息一起上报\n        @ .isError:boolean                  //是否是错误信息\n        @ .isPerformance:boolean            //是否是性能捕获分析\n        @ .preDelete:boolean                //是否删除之前的信息\n        @ .ignore:boolean                   //本条数据是否忽略\n    }\n */\nexport var _handleReport = function(params, control) {\n    var that = this;\n    //如果未传入数据类型\n    if (!params || !control || !tool.isObject(params) || !tool.isObject(control)) {\n        return false;\n    }\n    //获得上传数据\n    var reportData = that._createReportData(params, control)\n        //上传到服务器\n    var {\n        reportUrl,\n        onReportFail,\n        onReportBeforeSetUrl,\n        onReportBeforeSetHead,\n        onReportBeforeHook,\n        onReportResultHook,\n    } = this.$report_config\n        //如果没有设置上传URL 那么停止上传\n    if (!reportUrl || !tool.isArray(reportUrl)) {\n        that._handleReportFail(onReportFail, reportData, null)\n        return false;\n    }\n    //遍历URL上传列表\n    //开始依次上传\n    reportUrl.map(function(item) {\n            var reportConfig = {};\n            //是否有上传前修改URL回调\n            if (onReportBeforeSetUrl) {\n                var url = that._handleHook(onReportBeforeSetUrl, item);\n            } else {\n                url = item;\n            }\n            if (!tool.isString(url)) {\n                that._handleReportFail(onReportFail, reportData, null)\n                return false;\n            }\n            reportConfig.url = url;\n            //获取自定义请求头\n            var customeHead = onReportBeforeSetHead ? that._handleHook(onReportBeforeSetHead, item) : false;\n            if (customeHead && tool.isObject(customeHead) && !tool.isEmptyObject(customeHead)) {\n                reportConfig.customeHead = customeHead\n            }\n            //获取请求\n            reportConfig.data = reportData;\n            that._handleHook(onReportBeforeHook, reportData, reportConfig.url, reportConfig.customeHead);\n            //上传到服务器\n            try {\n                AjaxServer(reportConfig).then(function(result) {\n                    that._handleHook(onReportResultHook, result.data, reportConfig.url, result.head);\n                }, function(err) {\n                    that._handleReportFail(onReportFail, reportData, reportConfig.url);\n                })\n            } catch (err) {\n                //上传报错\n                that.$devError('report Server Process find error:' + err)\n            }\n            //end\n        })\n        // map url end\n}\n\n\n\n\n/*\n    生成上报数据头\n    params:\n    @params  = {\n        type:  string                   //类型,observer or performance    \n        typeName:  string               //类型名,vue  or log or network\n        location:string                 //捕获位置\n        environment:string              //运行环境信息\n        data:object                     //捕获数据\n        reportTime: int //捕获时间搓\n    }\n    @.control = {\n        @ .isReport:boolean                 //是否需要上报 内部reportServer需要使用\n        @ .lazy:boolean                     //是否懒上报, （手动trackExtend合并上报,或者trackExtend合并上报）,不立即上报\n        @ .trackExtend:boolean              //是否合并之前保存的lazy信息一起上报\n        @ .isError:boolean                  //是否是错误信息\n        @ .isPerformance:boolean            //是否是性能捕获分析\n        @ .preDelete:boolean                //是否删除之前的信息\n        @ .ignore:boolean                   //本条数据是否忽略\n    }\n    *****************************************************\n    return\n    reportData {\n        //以下参数必定存在\n        @.reportType string                 上报的具体类型名\n        @.project string                    上报项目名\n        @.projectVersion string             上报项目版本\n        @.reportTime number                 上报时间时间搓\n        @.data  object                      上报内容\n        @.environment string                上报项目运行环境\n        //一下参数可能存在\n        @.customeInfo all                   用户自定义设置上传参数\n        @.preTrackData object               合并之前保存的监控数据对象\n    }\n*/\nexport var _createReportData = function(params, control) {\n    var that = this;\n    var reportData = {};\n    //添加类型\n    reportData.reportType = params.typeName;\n    reportData.isMonitorError = params.type === 'observer' ? true : false;\n    reportData.isPerformance = params.type === 'performance' ? true : false;\n    //基本信息\n    reportData.project = that._project;\n    reportData.projectVersion = that._projectVersion\n    reportData.reportTime = params.reportTime;\n    reportData.environment = params.environment;\n    reportData.data = params.data;\n    //处理自定义信息\n    if (that._customeInfo) {\n        reportData.customeInfo = tool.extend({}, that._customeInfo);\n    }\n    //处理上报数据是否合并上报\n    if (control.trackExtend) {\n        reportData.preTrackData = {}\n        for (var key in that.reportData) {\n            var value = that.reportData[key];\n            if (tool.isArray(value) && value.length > 0) {\n                reportData.preTrackData[key] = tool.extend({}, value);\n                //删除相关数据\n                that._removeReportData(key)\n            }\n        }\n        //修正数据\n        reportData.preTrackData = tool.isEmptyObject(reportData.preTrackData) ? null : reportData.preTrackData\n    }\n    //开发模式下打印上报数据\n    if (that.develop) {\n        var log = tool.extend({}, reportData)\n        log.title = params.type + \" type \" + params.typeName + \" will report Server,report Data in the data \"\n        that.$devLog(log)\n    }\n    return reportData\n}\n\n\n\n\n\n/*\n\t调用钩子\n\t@arguments[0] = onHooK\n\t@arguments[...] = params\n\treturn\n\t\tonHook result\n */\nexport var _handleHook = function() {\n    var args = tool.toArray(arguments);\n    if (!args || args.length === 0 || !tool.isFunction(args[0])) {\n        return false;\n    }\n    var onHook = args[0];\n    var params = args.slice(1, args.length);\n    try {\n        var result = onHook(params);\n    } catch (err) {\n        //报错\n        this.$devError(onHook.name + 'callback hook is runing error:' + err)\n    }\n    return result\n}\n\n\n\n\n\n/*  \n\t处理上传失败\n\tparams\n\t\tonFail      function        \t失败的回调 没有则忽略直接跳过\n\t\treportData \tobj or arr          需要上传的数据\n\t\treportUrl \tstring     \t\t\t上传的url地址 (有可能存在)\n */\nexport var _handleReportFail = function(onFail, reportData, reportUrl) {\n    if (!onFail) {\n        return false;\n    }\n    try {\n        onFail(reportData, reportUrl)\n    } catch (e) {\n        this.$devError('report Server callback hook is runing error:' + err)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// src/services/report/report.js","import * as tool from '../../tool/index.js';\n\n\n\n\n/*\n\t处理url挂载参数\n\thandle url paramns\n */\nvar handleUrlParams = function(url, params) {\n    if (url.indexOf('?') === -1) {\n        url += '?';\n    } else {\n        url += (url.indexOf('&') === -1) ? '&' : '';\n    }\n    for (var key in params) {\n        url += key + '=';\n        url += params[key].toString() + '&'\n    }\n    url = url.substring(0, url.length - 1);\n    return url;\n}\n\n\n\n\n/*\n\n \treport data Ajax request\n\t上报ajax请求  \n\tparams\n\t\tconfig = {\n\t\t\turl: \t\t\t上报url \t\t\t\treport url\n\t\t\tdata:  \t\t\t上报数据 \t\t\t\treport data\n\t\t\tparams: \t\t上报url上是否挂载参数 \treport url on params\n\t\t\tcustomeHead:    上报自定义请求头     \treport custome request header\n\t\t}\n\treturn \n\t\tPromise\n */\nvar AjaxServer = function(config) {\n    //创建一个Promise回调\n    //new Promise\n    var defer = new Promise(function(res, rej) {\n        var {\n            url,\n            data,\n            params,\n            customeHead\n        } = config;\n        var resHead = {};\n        //judge data\n        if (!url || !data) {\n            rej('report data fail, report url and report data is exist undefined!')\n            return false;\n        }\n        //can is use params\n        if (params && tool.isObject(params)) {\n            url = handleUrlParams(url, params);\n        }\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', url, true);\n        //handle request header flag\n        var xhrHead = {\n            'Content-Type': 'application/json;charset=UTF-8',\n        };\n        if (customeHead && tool.isObject(customeHead)) {\n            xhrHead = tool.extend(xhrHead, customeHead)\n        }\n        xhrHead['keepObserver-reportAjax'] = 'yes';\n        for (var key in xhrHead) {\n            xhr.setRequestHeader(key, xhrHead[key]);\n        }\n        xhr.onreadystatechange = function(e) {\n            if (xhr.readyState == 4) {\n                //防止跨域等问题  触发错误导致死循环\n                //Prevent problems such as cross-domain triggering errors that lead to dead loops\n                try {\n                    //handle response headers\n                    if (xhr && xhr.getAllResponseHeaders) {\n                        var header = xhr.getAllResponseHeaders() || '',\n                            headerArr = header.split(\"\\n\");\n\n                        //get data\n                        for (let i = 0; i < headerArr.length; i++) {\n                            let line = headerArr[i];\n                            if (!line) {\n                                continue;\n                            }\n                            let arr = line.split(': ');\n                            let key = arr[0],\n                                value = arr.slice(1).join(': ');\n                            resHead[key] = value;\n                        }\n                    }\n                    if (xhr.status == 200) {\n                        var result = {\n                            head: resHead,\n                            data: xhr.responseText,\n                        }\n                        res(result)\n                    } else {\n                        rej('Ajax request process find error! error status code:' + xhr.status)\n                    }\n                } catch (e) {\n                    rej('Ajax request process find error!' + e)\n                }\n                //end\n            }\n        };\n        xhr.onerror = function(e) {\n                rej('Ajax request process find error!' + e);\n            }\n            //send data\n        var data = JSON.stringify(data);\n        xhr.send(data);\n    })\n    return defer\n}\n\n\n\nexport default AjaxServer\n\n\n// WEBPACK FOOTER //\n// src/services/report/ajax.js","import KeepObserverDefault from '../../default/index.js';\n\nimport {\n    version\n} from '../../constants/index'\n\nimport defaultConfig from './defaultConfig.js';\nimport * as tool from '../../tool/index.js';\n\nimport * as apiServer from './api.js'\nimport * as handleServer from './handle.js'\nimport * as reportServer from './report.js'\n\n\n\n// report Server \nclass KeepObserverReport extends KeepObserverDefault {\n    //constructor\n    constructor(config) {\n            super(config);\n            //存混合配置\n            var reportConfig = config.reportCustom || {};\n            //是否是开发模式\n            reportConfig.develop = config.develop ? true : false;\n            //开发环境下获取报文是否打印\n            reportConfig.developGetMsgLog = config.developGetMsgLog ? true : false;\n            //开发环境下丢弃数据 是否打印出来\n            reportConfig.develogDiscardLog = config.develogDiscardLog ? true : false;\n            //开发环境下删除出数据 是否打印出来\n            reportConfig.develogDeleteLog = config.develogDeleteLog ? true : false;\n            //混合默认配置\n            this.$report_config = tool.extend(defaultConfig, reportConfig);\n            //上传数据保存\n            this.reportData = {};\n            //用户自定义上传参数\n            this._customeInfo = false;\n            //项目\n            this._project = config.project || 'unKnow';\n            //项目版本\n            this._projectVersion = config.projectVersion || 'unknow-version'\n\n            //当前是否处于开发模式\n            this.develop = this.$report_config.develop;\n            this.developGetMsgLog = this.$report_config.developGetMsgLog;\n            this.develogDeleteLog = this.$report_config.develogDeleteLog;\n            this.develogDiscardLog = this.$report_config.develogDiscardLog;\n\n            //混入自身方法\n            this.$mixin(apiServer);\n            this.$mixin(handleServer);\n            this.$mixin(reportServer);\n            //初始化\n            this._init();\n        }\n        /*\n            初始化上报类参数\n            复制this.reportData并从strong里面复原数据\n         */\n    _init() {\n            var that = this;\n            //初始化this.reportData\n            var handleType = that.$report_config.$observer_Type\n            handleType.forEach(function(type) {\n                var cacheData = tool.getStorage(type)\n                that.reportData[type] = [];\n                if (cacheData) {\n                    that.reportData[type] = cacheData\n                }\n            });\n        }\n        /*\n            提供一个挂载方法在注入中使用\n            return \n                $getCustomeReport\n         */\n    apply(pipe, dev) {\n        var that = this;\n        pipe.registerRecivePipeMessage(that._getReportContent, that)\n        return {\n            $setCustomeReportData: this.$setCustomeReportData\n        }\n    }\n}\n\n\n\n\nexport default KeepObserverReport\n\n\n// WEBPACK FOOTER //\n// src/services/report/index.js"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3DA;AA8BA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAeA;AASA;AAMA;AAGA;AAMA;AASA;AAsBA;AAGA;AAgBA;AAQA;AAQA;AAoBA;AArLA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/OA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AASA;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACHA;AACA;AADA;AACA;;;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpCA;AACA;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;ACxBA;AACA;AADA;AACA;;;AACA;;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjHA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrNA;AACA;AADA;AACA;;;AAIA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;AC3HA;AACA;;;AACA;AACA;AAGA;AACA;;;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;;;;;;;AAGA;AACA;;;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAmCA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;AAjEA;AACA;AAsEA;;;;;A","sourceRoot":""}