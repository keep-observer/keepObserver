{"version":3,"file":"keepObserver.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4fd34d594509c50bb953","webpack:///src/tool/index.js","webpack:///src/instance/index.js","webpack:///src/default/index.js","webpack:///src/instance/_log.js","webpack:///src/instance/_network.js","webpack:///src/instance/_system.js","webpack:///src/instance/_vue.js","webpack:///src/observer/log/defaultConfig.js","webpack:///src/observer/log/index.js","webpack:///src/observer/network/defaultConfig.js","webpack:///src/observer/network/index.js","webpack:///src/observer/network/tool.js","webpack:///src/observer/system/defaultConfig.js","webpack:///src/observer/system/index.js","webpack:///src/observer/vue/defaultConfig.js","webpack:///src/observer/vue/index.js","webpack:///src/report/ajax.js","webpack:///src/report/defaultConfig.js","webpack:///src/report/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4fd34d594509c50bb953","\n\n/**\n * 根据时间搓 返回时间\n * @param date format\n * @return string\n */\nexport function dateFormat(date,format){\n    if(!format || typeof format !== 'string'){\n      console.error('format is undefiend or type is Error');\n      return '';\n    }\n    date = date instanceof Date? date : (typeof date === 'number'|| typeof date === 'string')? new Date(date): new Date();\n    //解析\n    var formatReg = {\n      'y+': date.getFullYear(),\n      'M+': date.getMonth()+1,\n      'd+': date.getDate(),\n      'h+': date.getHours(),\n      'm+': date.getMinutes(),\n      's+': date.getSeconds(),\n    }\n    for(var reg in formatReg){\n      if(new RegExp(reg).test(format)){\n            var match = RegExp.lastMatch;\n            format = format.replace(match, formatReg[reg]< 10 ? '0'+formatReg[reg]: formatReg[reg].toString() );\n      }\n    }\n    return format;\n}\n\n\n/**\n * 检查script基本数据类型\n * @param mixed value\n * @return boolean\n */\nexport function isNumber(value) {\n  return Object.prototype.toString.call(value) == '[object Number]';\n}\nexport function isString(value) {\n  return Object.prototype.toString.call(value) == '[object String]';\n}\nexport function isArray(value) {\n  return Object.prototype.toString.call(value) == '[object Array]';\n}\nexport function isBoolean(value) {\n  return Object.prototype.toString.call(value) == '[object Boolean]';\n}\nexport function isUndefined(value) {\n  return value === undefined;\n}\nexport function isNull(value) {\n  return value === null;\n}\nexport function isSymbol(value) {\n  return Object.prototype.toString.call(value) == '[object Symbol]';\n}\nexport function isObject(value) {\n  return (\n    Object.prototype.toString.call(value) == '[object Object]'\n    ||\n    // if it isn't a primitive value, then it is a common object\n    (\n      !isNumber(value) &&\n      !isString(value) &&\n      !isBoolean(value) &&\n      !isArray(value) &&\n      !isNull(value) &&\n      !isFunction(value) &&\n      !isUndefined(value) &&\n      !isSymbol(value)\n    )\n  );\n}\nexport function isEmptyObject(obj){\n    if(!isObject(obj)){\n        return true;\n    }\n    for(var key in obj){\n        return false;\n    }\n    return true\n}\nexport function isEmptyArray(array){\n    if(!isArray(array)){\n        return true\n    }\n    return array.length>0? false:true\n}\nexport function isFunction(value) {\n  return Object.prototype.toString.call(value) == '[object Function]';\n}\nexport function isElement(value) {\n  return (\n    typeof HTMLElement === 'object' ? value instanceof HTMLElement : //DOM2\n      value && typeof value === \"object\" && value !== null && value.nodeType === 1 && typeof value.nodeName===\"string\"\n  );\n}\nexport function isWindow(value) {\n  var toString = Object.prototype.toString.call(value);\n  return toString == '[object global]' || toString == '[object Window]' || toString == '[object DOMWindow]';\n}\n/**\n * 检查是否是普通空对象\n * @param object obj\n * @return boolean\n */\nexport function isPlainObject(obj) {\n  var hasOwn = Object.prototype.hasOwnProperty;\n  // Must be an Object.\n  if (!obj || typeof obj !== 'object' || obj.nodeType || isWindow(obj)) {\n    return false;\n  }\n  try {\n    if (obj.constructor && !hasOwn.call(obj, 'constructor') && !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var key;\n  for (key in obj) {}\n  return key === undefined || hasOwn.call(obj, key);\n}\n\n\n/*\n  转换工具\n */\nexport function toArray(array){\n  return Array.prototype.slice.call(array)\n}\nexport function toString(content){\n  if(!content){\n    return '';\n  }\n  if(typeof content === 'string'){\n    return content\n  }\n  return content.toString()\n}\n\n\n\n/*\n    辅助存储保存监控数据\n    localStorage\n*/\nexport function setStorage(key, value) {\n  if (!window.localStorage) {\n    return;\n  }\n  key = 'keepObserverData_' + key;\n  value = JSON.stringify(value)\n  localStorage.setItem(key, value);\n}\nexport function getStorage(key) {\n  if (!window.localStorage) {\n    return;\n  }\n  key = 'keepObserverData_' + key;\n  var value = localStorage.getItem(key)\n  return value?JSON.parse(value):'';\n}\nexport function removeStorage(key){\n    if (!window.localStorage) {\n      return;\n    }\n    key = 'keepObserverData_' + key;\n    localStorage.removeItem(key);\n}\n\n\n\n\n\n/*\n    深度合并内容\n    引用类型克隆合并\n    arguments[0] = target\n    arguments type is Object Or Array\n    多内容合并覆盖优先级: arguments[0]<arguments[1]<arguments[2]..\n    如果sources 不是数组或者对象 则直接忽略\n */\nexport function extend(){\n  var args = toArray(arguments);\n  if(args.length === 0){\n    console.error('extends params is undefined')\n    return {};\n  }\n  if(args.length === 1){\n    return args[0]\n  }\n  var target = args[0];\n  var sources = args.slice(1,args.length)\n\n  if(!isObject(target) && !isArray(target)){\n    target = {}; \n  }\n  sources.map(function(item){\n    //防止死循环\n    if(target === item){\n        return false;\n    }\n    //如果内容是对象 \n    if(isObject(item)){\n        //开始遍历\n        for(var key in item){\n            //如果内容是对象\n            if(isObject(item[key])){\n                //修正数据\n                target[key] = (target[key] && isObject(target[key]))?target[key]:{};\n                target[key] = extend(target[key],item[key])\n            }else if(isArray(item)){\n                //修正数据\n                target[key] = (target[key] && isArray(target[key]))?target[key]:[];\n                target[key] = extend(target[key],item[key])\n            }else{\n                //基本类型直接赋值\n                target[key] = item[key]\n            }\n        }\n    }else if(isArray(item)){\n        for(var i = 0; i<item.length ;i++){\n            //如果内容是对象\n            if(isObject(item[i])){\n                //修正数据\n                target[i] = (target[i] && isObject(target[i]))?target[i]:{}\n                target[i] = extend(target[i],item[i])\n            }else if(isArray(item)){\n                //修正数据\n                target[i] = (target[i] && isArray(target[i]))?target[i]:[];\n                target[i] = extend(target[i],item[i])\n            }else{\n                //基本类型直接赋值\n                target[i] = item[i]\n            }\n        }\n    }\n    //其他类型直接忽略  \n  })\n  return target\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/tool/index.js","\n\n\nimport * as tool from '../tool/index.js';\n//继承通信类\nimport keepObserverReport from '../report/index.js';\n\n\n//相关监控初始化 和一些处理\nimport _initSystem from './_system.js';\nimport _initNetWork from './_network.js';\nimport _initLog from './_log.js';\nimport _initVue from './_vue.js';\n\n\n\nclass KeepObserver extends keepObserverReport {\n\t//构造函数\n\tconstructor(config){\n\t\t//上报配置\n\t\tvar CustomConfig = config.reportCustom || {};\n\t\t//是否是开发模式\n\t\tCustomConfig.develop = config.develop? true : false;\n\t\t//开发环境下获取报文是否打印\n\t\tCustomConfig.developGetMsgLog = config.developGetMsgLog? true : false,\n\t\t//开发环境下丢弃数据 是否打印出来\n\t\tCustomConfig.develogDiscardLog = config.develogDiscardLog? true : false,\n\t\t//开发环境下删除出数据 是否打印出来\n\t\tCustomConfig.develogDeleteLog  = config.develogDeleteLog? true : false,\n\t\t//继承上报类\n\t\tsuper(CustomConfig)\n\t\t/********************  开始本实例配置  *******************/\n\t\t//获取实例配置\n\t\tthis._config = config\n\t\t\n\t\t//版本号\n\t\tthis._version = '1.0.3';\n\t\t//项目\n\t\tthis._project = config.project || 'unKnow';\n\t\t//监听内容\n\t\tthis.observerKey = {};\n\t\t//初始化系统详情和首屏分析\n\t\tthis._initSyStem()\n\t\t//初始化网络拦截分解\n\t\tthis._initNetWork();\n\t\t//初始化日志拦截\n\t\tthis._initLog();\n\t\t//判断是否开启vue监控\n\t\tif(this._config.isVue && this._config.vueInstance){\n\t\t\tthis._initVue();\n\t\t}\n\t}\n\t/*****************以下监控默认开启*****************/\n\t/*\n\t\t开始识别系统\n\t\t开始后将识别平台系统\n\t\t支持performance的系统,将开启平台监控\n\t */\n\t_initSyStem(){\n\t\t_initSystem.call(this);\n\t}\n\t/*\n\t\t开始监控网络\n\t\t开始后将替换window.XMLHttpRequest相关原生方法\n\t */\n\t_initNetWork(){\n\t\t_initNetWork.call(this);\n\t\tthis.observerKey.network = true;\n\t}\n\t/*\n\t\t开始监控日志\n\t\t开始后将替换window.console相关原生方法\n\t */\n\t_initLog(){\n\t\t_initLog.call(this);\n\t\tthis.observerKey.log = true;\n\t}\n\t/*\n\t\t开始监控vue\n\t\t监控vue运行错误和警告\n\t\tperformance暂时未做\n\t */\n\t_initVue(){\n\t\t_initVue.call(this);\n\t\tthis.observerKey.vue = true;\t\t\n\t}\n\t/*************** end observer *******************/\n\t//设置自定义上报内容\n\tsetCustomReport(params){\n\t\tif(this.$getCustomeReport){\n\t\t\tthis.$getCustomeReport(params);\n\t\t}\n\t}\n\t//停止监听\n\tstopObserver(key){\n\t\tif(this.observerKey[key] && this['$'+key].stopObserver){\n\t\t\tthis['$'+key].stopObserver();\n\t\t\tthis.observerKey[key] = false;\n\t\t}\n\t}\n\t//停止全部监听\n\tstopAllObserver(){\n\t\tfor(var key in this.observerKey){\n\t\t\tif(this['$'+key].stopObserver){\n\t\t\t\tthis['$'+key].stopObserver();\n\t\t\t\tthis.observerKey[key] = false;\n\t\t\t}\n\t\t}\n\t}\n\t//打开监听\n\tstartObserver(key){\n\t\tif(!this.observerKey[key] && this['$'+key].startObserver){\n\t\t\tthis['$'+key].startObserver();\n\t\t\tthis.observerKey[key] = true;\n\t\t}\n\t}\n\t//打开全部监听\n\tstartAllObserver(){\n\t\tfor(var key in this.observerKey){\n\t\t\tif(this['$'+key].startObserver){\n\t\t\t\tthis['$'+key].startObserver();\n\t\t\t\tthis.observerKey[key] = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\nexport default KeepObserver\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/instance/index.js","\n\n\n//公共默认类\n//提供一些全局公共方法\nclass KeepObserverDefault {\n\n\tconstructor(config){\n\t\t//开发模式下的log 替换window.console.log\n\t\tthis.$devLog = false;\n\t\t//开发模式写error log 替换window.console.error\n\t\tthis.$devError = false;\n\n\t\tthis._defaultinit();\n\t}\n\n\n\t_defaultinit(){\n\t\tvar self = this;\n\t\t//初始化$devLog\n\t\tself.$devLog = window.console.log\n\t\twindow.console.log = (...args) => {\n\t      \tself.$devLog.apply(window.console, args);\n\t    };\n\t    //初始化$$devError\n\t    self.$devError = window.console.error\n\t\twindow.console.error = (...args) => {\n\t      \tself.$devError.apply(window.console, args);\n\t    };\n\t}\n\n\n}\n\n\n\n\n\nexport default KeepObserverDefault;\n\n\n\n// WEBPACK FOOTER //\n// src/default/index.js","\n\nimport * as tool from '../tool/index.js';\n\n//日志拦截请求分享\nimport KeepObserverLog from '../observer/log/index.js';\n\n\nvar _initLog = function(){\n\tvar self = this;\n\t//初始化上传相关实例\n\tvar CustomConfig = self._config.logCustom? self._config.logCustom: {};\n\t//是否是开发模式\n\tCustomConfig.develop = self._config.develop? true : false;\n\tself.$log = new KeepObserverLog(CustomConfig)\n\t//注册监听\n\tself.$log.addReportListener(function(logInfo){\n\t\tvar reportParams = {};\n\t\tvar control = null;\n\t\treportParams.typeName = 'log';\n\t\treportParams.location = window.location.href;\n\t\treportParams.data = logInfo;\n\t\t//如果是clear,清除之前的console.log相关信息\n\t\tif(logInfo.type === 'clear'){\n\t\t\tcontrol = {};\n\t\t\tcontrol.preDelete = true;\n\t\t\tcontrol.ignore = true\n\t\t}\n\t\t//如果是JS运行报错,或者打印错误error合并上报所有内容\n\t\tif(logInfo.type === 'jsError' || logInfo.type === 'error'){\n\t\t\tcontrol = {};\n\t\t\tcontrol.lazy = false;\n\t\t\tcontrol.baseExtend = true;\n\t\t\tcontrol.isError = true;\n\t\t}\n\t\tself.$getReportContent(reportParams,control)\n\t})\n}\n\n\n\nexport default _initLog;\n\n\n// WEBPACK FOOTER //\n// src/instance/_log.js","\n\nimport * as tool from '../tool/index.js';\n//网络请求拦截分析\nimport KeepObserverNetwork from '../observer/network/index.js';\n\n\n\n\nvar _initNetWork  = function(){\n\tvar self = this;\n\t//初始化上传相关实例\n\tvar CustomConfig = self._config.networkCustom? self._config.networkCustom: {};\n\tself.$network = new KeepObserverNetwork(CustomConfig)\n\t//注册监听\n\tself.$network.addReportListener(function(ajaxInfo){\n\t\tvar reportParams = {};\n\t\tvar control = null;\n\t\treportParams.typeName = 'network';\n\t\treportParams.location = window.location.href;\n\t\treportParams.data = ajaxInfo;\n\t\t//是否请求出错\n\t\tif(ajaxInfo.isError){\n\t\t\tcontrol = {};\n\t\t\tcontrol.lazy = false;\n\t\t\t//是否是超时请求,超时请求不合并上报\n\t\t\tcontrol.baseExtend = ajaxInfo.isTimeout? false :true;\n\t\t\tcontrol.isError = ajaxInfo.isTimeout? false :true;\n\t\t}\n\t\tself.$getReportContent(reportParams,control)\n\t})\n}\n\n\n\n\nexport default _initNetWork;\n\n\n\n\n// WEBPACK FOOTER //\n// src/instance/_network.js","\n\n\nimport * as tool from '../tool/index.js';\n\n//系统信息和首屏分析\nimport KeepObserverSystem from '../observer/system/index.js';\n\n\n\nvar _initSystem = function(){\n\tvar self = this;\n\t//初始化上传相关实例\n\tvar CustomConfig = self._config.systemCustom? self._config.systemCustom: {};\n\tself.$system = new KeepObserverSystem(CustomConfig)\n\t//注册监听\n\tself.$system.addReportListener(function(systemInfo){\n\t\tvar reportParams = {};\n\t\treportParams.typeName = 'system';\n\t\treportParams.location = window.location.href;\n\t\treportParams.data = systemInfo;\n\t\t//系统信息和首屏性能立即上报\n\t\tvar control = {};\n\t\tcontrol.lazy = false;\n\t\tself.$getReportContent(reportParams,control)\n\t})\n}\n\n\n\n\nexport default _initSystem;\n\n\n\n// WEBPACK FOOTER //\n// src/instance/_system.js","\n\n//vue错误监控和性能分析\nimport KeepObserverVue from '../observer/vue/index.js';\n\n\n\nvar _initVue = function(){\n\tvar self = this;\n\t//初始化上传相关实例\n\tvar CustomConfig = self._config.vueCustom? self._config.vueCustom: {};\n\tCustomConfig.vueInstance = self._config.vueInstance;\n\t//判断是否存在实例\n\tif(!CustomConfig.vueInstance){\n\t\treturn false;\n\t}\n\t//注册监听\n\tself.$vue = new KeepObserverVue(CustomConfig)\n\t//注册监听\n\tself.$vue.addReportListener(function(vueInfo){\n\t\tvar reportParams = {};\n\t\treportParams.typeName = 'vue';\n\t\treportParams.location = window.location.href;\n\t\treportParams.data = vueInfo;\n\t\tvar control = {};\n\t\tif(vueInfo.isError){\n\t\t\tcontrol.lazy = false;\n\t\t\tcontrol.baseExtend = true;\n\t\t\tcontrol.isError = true;\n\t\t}\n\t\tself.$getReportContent(reportParams,control)\n\t})\n}\n\n\n\n\nexport default _initVue;\n\n\n// WEBPACK FOOTER //\n// src/instance/_vue.js","\n\n\n\n/*\n \n \tobserver log 实例默认配置数据\n */ \n\n\nexport default {\n\t//是否捕获跨域JS错误\n\tcatchCrossDomain:true,\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/log/defaultConfig.js","\n\nimport defaultConfig from './defaultConfig.js';\nimport * as tool from '../../tool/index.js';\n\n\n\n// 获取系统信息\nclass KeepObserverLog {\n\t//构造函数\n\tconstructor(config){\n\t\t//存混合配置\n\t\tthis._config  = tool.extend(defaultConfig,config)\n\t\t//上报名\n\t\tthis._typeName = 'log'\n\t\t//监听列表\n\t\tthis.eventListener = [];\n\t\t//当前是否处于开发模式\n\t\tthis._develop = this._config.develop;\n\t\t//替换window.console\n\t\tthis.console = {};\n\t\t//替换 doucment.createElement 插入script .crossOrigin = 'anonymous';\n\t\tthis.$createElement = false;\n\t\t//启动\n\t\tthis._init();\n\t}\n\t/*\n\t\t初始化替换相关信息\n\t */\n\t_init(){\n\t\tvar self = this;\n\t\t//替换window.console变量\n\t\tvar baseLogList = ['log','info','warn','debug','error'];\n\n\t\tif(!window.console){\n\t\t\twindow.console = {};\n\t\t}\n\n\t\tbaseLogList.map(function(method){\n\t\t\tself.console[method] = window.console[method];\n\t\t})\n\t\tself.console.time = window.console.time;\n\t\tself.console.timeEnd = window.console.timeEnd;\n\t\tself.console.clear = window.console.clear;\n\n\t\tbaseLogList.map(method =>{\n\t\t\twindow.console[method] = (...args) =>{\n\t\t\t\t//是否处于开发模式下\n\t\t\t\tif(self._develop && self.console[method] && tool.isFunction(self.console[method])){\n\t\t\t\t\tself.console[method](...args);\n\t\t\t\t}\n\t\t\t\t//交给拦截处理信息\n\t\t\t\tself._handleMessage(method,args);\n\t\t\t}\n\t\t})\n\t\t//处理time timeEnd clear\n\t\tvar timeLog = {};\n\t\twindow.console.time = function(label){\n\t\t\ttimeLog[label] = Date.now();\n\t\t}\n\t\twindow.console.timeEnd = function(label){\n\t\t\tvar pre = timeLog[label];\n\t\t\tvar type = 'timeEnd'\n\t\t\tif(pre){\n\t\t\t\tvar content = label+':'+(Date.now() - pre)+'ms';\n\t\t\t\tself._handleMessage(type,[content]);\n\t\t\t\t//开发模式下打印\n\t\t\t\tif(self._develop && self.console.log && tool.isFunction(self.console.log)){\n\t\t\t\t\tself.console.log(content);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tvar content = label+': 0ms';\n\t\t\t\tself._handleMessage(type,[content]);\n\t\t\t\t//开发模式下打印\n\t\t\t\tif(self._develop && self.console.log && tool.isFunction(self.console.log)){\n\t\t\t\t\tself.console.log(content);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twindow.console.clear = (...args) =>{\n\t\t\tself._handleMessage('clear',args);\n\t\t\tself.console.clear.apply(window.console, args);\n\t\t}\n\t\t//是否需要捕获跨域JS错误\n\t\tif(self._config.catchCrossDomain && !self.$createElement){\n\t\t\t//侵入document.createElement  实现跨域JS捕获错误信息\n\t\t\tif(window.document || window.document.createElement){\n\t\t\t\tself.$createElement = window.document.createElement\n\t\t\t\twindow.document.createElement = function(type){\n\t\t\t\t\tvar resultDom = self.$createElement.call(window.document,type)\n\t\t\t\t\tif(type === 'script'){\n\t\t\t\t\t\tresultDom.crossOrigin = 'anonymous';\n\t\t\t\t\t}\n\t\t\t\t\treturn resultDom\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//监控window.onerror\n\t\tif (typeof window.addEventListener != 'undefined') { \n\t\t\twindow.addEventListener('error',(...args) =>{self._handleError(...args)},true); \n\t\t} else { \n\t\t\twindow.attachEvent('onerror',(...args) =>{self._handleError(...args)}) \n\t\t}\n\t}\n\t/*\n\t\t处理打印信息\n\t\t上报报文如下\n\t\t@: type string  (log|info|debug.... jsError)\n\t\t@: data string  (JSON格式对象报文)\n\t */\n\t_handleMessage(type,agrs){\n\t\tvar self = this;\n\t\tvar reportData = {}\n\t\t//agrs不是数组 或是空数组 则不处理\n\t\tif(!tool.isArray(agrs) || agrs.length === 0){\n\t\t\treturn false;\n\t\t}\n\t\treportData.type = type;\n\t\t//直接转成JSON\n\t\treportData.data = JSON.stringify(agrs);\n\t\t//上报\n\t\tself.noticeReport(reportData)\n\t}\n\t/*\n\t\t监听 window.onerror,并处理错误信息\n\t\t@errorEvent \t\t:错误信息对象\n\t\t////////  上报error对象 /////////\n\t\terrorObj object = {\n\t\t\terrMsg: \t\t\t错误信息\n\t\t\turl:                错误文件\n\t\t\tline:         \t\t错误所在行\n\t\t\tcolum:              错误所在列\n\t\t}\n\t */\n\t_handleError(errorEvent){\n\t\tvar self = this;\n\t\tvar errorObj = {};\n\t\tvar url = errorEvent.filename || errorEvent.url || false\n\t\t//可能是跨域资源JS出现错误 这获取不到详细信息\n\t\tif(errorEvent.message === 'Script error.' && !url){\n\t\t\terrorObj.errMsg = 'jsError!可能是跨域资源的JS出现错误,无法获取到错误URL定位,错误信息为:'+errorEvent.message;\n\t\t\terrorObj.url = '';\n\t\t\terrorObj.line = 0;\n\t\t\terrorObj.colum = 0;\n\t\t\tsetTimeout(function(){\n\t\t\t\tself._handleMessage('jsError',[errorObj])\n\t\t\t})\n\t\t\treturn false;\n\t\t}\n\t\t//处理错误信息\n\t\terrorObj.errMsg = errorEvent.message || '未获取到错误信息'\n\t\terrorObj.url = url;\n\t\terrorObj.line = errorEvent.lineno || '未获取到错误行'\n\t\terrorObj.colum = errorEvent.colno || '未获取到错误列'\n\t\tsetTimeout(function(){\n\t\t\tself._handleMessage('jsError',[errorObj])\n\t\t})\n    \treturn true;\n\t}\n\t/*\n\t\t停止监听\n\t */\n\tstopObserver(){\n\t\twindow.console.log = this.console.log\n\t\twindow.console.error = this.console.error\n\t\twindow.console.info = this.console.info\n\t\twindow.console.debug = this.console.debug\n\t\twindow.console.warn = this.console.warn\n\t\twindow.console.time = this.console.time \n\t\twindow.console.timeEnd = this.console.timeEnd \n\t\twindow.console.clear = this.console.clear\n\t\tthis.console = {};\n\t\tif(this._config.catchCrossDomain){\n\t\t\twindow.document.createElement = this.$createElement\n\t\t\tthis.$createElement = false;\n\t\t}\n\t}\n\t/*\n\t\t开始监听\n\t */\n\tstartObserver(){\n\t\t//启动监听\n\t\tthis._init();\n\t}\n\t/***************  上报相关  ******************/\n\t//注册上报监听\n\taddReportListener(callback){\n\t\tif(callback){\n\t\t\tthis.eventListener.push(callback)\n\t\t}\n\t}\n\t/*\n\t\t通知上报\n\t */\n\tnoticeReport(content){\n\t\tif(this.eventListener.length === 0){\n\t\t\treturn false;\n\t\t}\n\t\t//通知上报\n\t\tthis.eventListener.map(function(item){\n\t\t\tif(tool.isFunction(item)){\n\t\t\t\titem(content);\n\t\t\t}\n\t\t})\n\t}\n}\n\n\n\n\nexport default KeepObserverLog\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/log/index.js","\n\n\n\n/*\n \tobserver newwork 实例默认配置数据\n */ \nexport default {\n\t//默认超时时间 20S;\n\ttimeout: 20000,\n\t//屏蔽URL\n\tignoreRequestList:false,\n\t//自定义判断接口返回是否正确\n\tonHandleJudgeResponse :false,\n\t//自定义处理响应数据 \n\tonHandleResponseData :false,\n\t//自定义处理请求数据\n\tonHandleRequestData :false,\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/network/defaultConfig.js","\n\nimport defaultConfig from './defaultConfig.js';\nimport * as tool from '../../tool/index.js';\nimport * as networkTool from './tool.js';\n\n\n\n// 获取系统信息\nclass KeepObserverNetwork{\n\t//构造函数\n\tconstructor(config){\n\t\t//存混合配置\n\t\tthis._config  = tool.extend(defaultConfig,config)\n\t\t//上报名\n\t\tthis._typeName = 'network'\n\t\t//监听列表\n\t\tthis.eventListener = [];\n\t\t//监控的数据列表\n\t\t//key 为 请求ID\n\t\t//value :{\n\t\t//\tmethod:   \t\t\t请求方法\n\t\t//\turl:      \t\t\t请求baseUrl\n\t\t//\treqHead:     \t\t请求头\n\t\t//\tresHead:        \t请求响应头\n\t\t//\tparams:   \t\t\t请求URL上携带的参数\n\t\t//\tdata:       \t\t请求postData\n\t\t//\tstatus:         \t请求状态码\n\t\t//\tstartTime:      \t请求开始时间\n\t\t//\tendTime:        \t请求结束时间\n\t\t//\tcostTime:       \t请求耗时\n \t\t//\tresponse: \t\t\t请求原始响应数据\n \t\t//\tresponseType    \t请求响应类型\n\t\t//\thandleResData:     \t如果配置中传入 自定义处理响应数据 那么这里将保持处理后的响应数据\n\t\t//\thandleReqData:      如果配置中传入 自定义处理发送数据 那么这里将保持处理后的发送数据\n\t\t//\tisTimeout:          是否超时 如果存在这个字段 则说明已经上报,忽略处理\n\t\t//\ttimeout:            如果超时 这里是设置的超时时间\n\t\t//\tisError:            这个请求是否出现错误\n\t\t//\terrorContent:       错误信息\n\t\t//}\n\t\tthis.networkList = {}\n\t\t//替换window.XMLHttpRequest变量\n\t\tthis._open = false;\n\t\tthis._send = false;\n\t\tthis._setRequestHeader = false;\n\t\t//辅助捕获超时\n\t\tthis.timeout = {};\n\t\tthis.timeoutRequest = {};\n\t\t//开启网络拦截监控\n\t\tthis._init();\n\t}\n\t/*\n\t\t初始化ajax请求监控\n\t\t在这里替换window.XMLHttpRequest变量进行监控\n\t */\n\t_init(){\n\t\tvar self = this;\n\t\tvar _XMLHttp = window.XMLHttpRequest;\n\t\t//不支持 ajax 不进行监控\n\t\tif(!_XMLHttp){\n\t\t\treturn false;\n\t\t}\n\t\tself._open =  window.XMLHttpRequest.prototype.open\n\t\tself._send =  window.XMLHttpRequest.prototype.send\n\t\tself._setRequestHeader = window.XMLHttpRequest.prototype.setRequestHeader\n\t\t//处理Ajax\n\t\tself._handleXMLAjax();\n\t}\n\t/*\n\t\t拦截XML AJax信息\n\t */\n\t_handleXMLAjax(){\n\t\tvar self = this;\n\t\t//拦截原生open\n\t\twindow.XMLHttpRequest.prototype.open = function(){\n\t\t\tvar XML = this;\n\t\t\tvar args = tool.toArray(arguments);\n\t\t\t//定时器\n\t\t\tvar timer = null;\n\t\t\t//获取请求唯一ID\n\t\t\tvar id = networkTool.getUniqueID();\n\t\t\t//获取方法\n\t\t\tvar method = args[0];\n\t\t\t//获取url\n\t\t\tvar url = args[1];\n\n\t\t\t//保存下 在send中使用\n\t\t\tXML._url = url;\n\t\t\tXML._method = method;\n\t\t\tXML._id = id;\n\t\t\t//保存下请求头 在拦截请求头处使用\n\t\t\tXML._setHead = {}\n\t\t\tXML._setHead[id] = {};\n\n\t\t\t//拦截处理响应回调\n\t\t\tvar _onreadystatechange = XML.onreadystatechange || function() {};\n\t\t\t// start onreadystatechange\n\t\t\tvar onreadystatechange = function(){\n\t\t\t\tvar item = self.networkList[id]? self.networkList[id]: false;\n\t\t\t\t//如果不存在 可能略过了send 会导致丢失部分数据\n\t\t\t\tif(!item){\n\t\t\t\t\titem = {}\n\t\t\t\t\t//保存请求方法\n\t\t\t\t\titem.method = method\n\t\t\t\t\tvar { url ,params } = networkTool.handleReqUrl(url);\n\t\t\t\t\t//处理请求url和params\n\t\t\t\t\titem.url = url;\n\t\t\t\t\titem.params = params;\n\t\t\t\t}\n\t\t\t\t//更新状态\n\t\t\t\titem.status = 0;\n\t\t        if (XML.readyState > 1) {\n\t\t          item.status = XML.status;\n\t\t        }\n\t\t        item.responseType = XML.responseType;\n\t\t        //判断请求状态\n\t\t        if (XML.readyState == 0) {\n\t\t        \t// 未开始\n\t\t        \tif (!item.startTime) {\n\t\t            \titem.startTime = (+new Date());\n\t\t          \t}\n\t\t        } else if (XML.readyState == 1) {\n\t\t          \t// 打开\n\t\t          \tif (!item.startTime) {\n\t\t            \titem.startTime = (+new Date());\n\t\t          \t}\n\t\t        } else if (XML.readyState == 2) {\n\t\t          \t// 发送\t\t          \t\n\t\t        } else if (XML.readyState == 3) {\n\t\t          \t//loading\n\t\t        } else if (XML.readyState == 4) {\n\t\t        \t//结束超时捕获\n\t\t        \tself._handleTimeout(id);\n\t\t        \t//处理响应头\n\t\t        \titem.resHead = {};\n\t\t          \tvar header = XML.getAllResponseHeaders() || '',\n\t\t             \theaderArr = header.split(\"\\n\");\n\t\t          \t//提取数据\n\t\t          \tfor (let i=0; i<headerArr.length; i++) {\n\t\t            \tlet line = headerArr[i];\n\t\t            \tif (!line) { continue; }\n\t\t            \tlet arr = line.split(': ');\n\t\t            \tlet key = arr[0],\n\t\t                value = arr.slice(1).join(': ');\n\t\t            \titem.resHead[key] = value;\n\t\t          \t}\n\t\t          \t//完成\n\t\t          \tclearInterval(timer);\n\t\t          \titem.endTime = +new Date(),\n\t\t          \titem.costTime = (item.endTime - (item.startTime || item.endTime))+'ms';\n\t\t          \titem.response = XML.response;\n\t\t          \t//请求结束完成\n\t\t         \tsetTimeout(function(){\n         \t\t\t\t//是否是超时接口 超时的接口不做处理\n\t\t\t\t\t\tif(!self.timeoutRequest[id]){\n\t\t\t\t\t\t\tself._handleDoneXML(id)\n\t\t\t\t\t\t}\n\t\t         \t})\n\t\t        } else {\n\t\t          clearInterval(timer);\n\t\t        }\n\t\t        //如果这个接口已经超时处理了 那么不记录\n\t\t        if(!self.timeoutRequest[id]){\n\t\t        \tself.networkList[id] = item;\n\t\t        }\n\t\t        return _onreadystatechange.apply(XML, arguments);\n\t\t\t}\n\t\t\tXML.onreadystatechange = onreadystatechange;\n\t\t\t//end onreadystatechange\n\t\t\t//防止第三方库更改状态\n\t\t\t//定时查看请求状态\n\t\t\tvar preState = -1;\n\t\t    timer = setInterval(function() {\n\t\t        if (preState != XML.readyState) {\n\t\t          preState = XML.readyState;\n\t\t          onreadystatechange.call(XML);\n\t\t        }\n\t\t    }, 10);\n\t\t    return self._open.apply(XML, args);\n\t\t}\n\t\t//拦截原始设置请求头\n\t\twindow.XMLHttpRequest.prototype.setRequestHeader = function(){\n\t\t\tvar XML = this;\n\t\t\tvar args = tool.toArray(arguments);\n\t\t\tif(XML._id && XML._setHead){\n\t\t\t\tvar setHead =   XML._setHead[XML._id];\n\t\t\t\tvar key = args[0]?args[0]:'unkownRequestHead';\n\t\t\t\tvar value = args[1]?args[1]:'';\n\t\t\t\tsetHead[key] = value\n\t\t\t\tXML._setHead[XML._id] =  setHead\n\t\t\t}\n\t\t\treturn self._setRequestHeader.apply(XML, args);\n\t\t}\n\t\t//拦截原生send\n\t\twindow.XMLHttpRequest.prototype.send = function(){\n\t\t\tvar XML = this;\n\t\t\tvar id = XML._id;\n\t\t\tvar method = XML._method.toUpperCase();\n\t\t\tvar requestHead = XML._setHead[id];\n\t\t\tvar url = XML._url;\n\t\t\tvar args = [].slice.call(arguments),\n          \t\tdata = args[0],\n          \t\tsaveData = '';\n\t\t\t//监听列表中创建一条请求\n\t\t\tif(!self.networkList[id]){\n\t\t\t\tself.networkList[id] = {}\n\t\t\t}\n\t\t\t//保存请求方法\n\t\t\tself.networkList[id].method = method;\n\t\t\tvar { url ,params } = networkTool.handleReqUrl(url);\n\t\t\t//处理请求url和params\n\t\t\tself.networkList[id].url = url;\n\t\t\tself.networkList[id].params = params;\n\t\t\t//保存自定义请求头\n\t\t\tif(requestHead){\n\t\t\t\tself.networkList[id].reqHead = tool.extend({},requestHead);\n\t\t\t\tdelete XML._setHead[id];\n\t\t\t}\n\t\t\t//如果是post数据保存\n\t\t\tif(method === 'POST'){\n\t\t        if(tool.isString(data)) {\n\t\t        \tsaveData = data;\n\t\t      \t}\n\t\t\t}\n\t\t\tself.networkList[id].data  = saveData;\n\t\t\t//开启定时器 判断接口是否超时\n\t\t\tself._handleTimeout(id);\n\t\t\treturn self._send.apply(XML, args);\n\t\t}\n\t}\n\t/*\n\t\t处理接口请求超时\n\t */\n\t_handleTimeout(id){\n\t\tvar self = this;\n\t\tvar timeout = self._config.timeout\n\t\tvar isTimeout = self.timeoutRequest[id] ? self.timeoutRequest[id] :false;\n\t\tvar time = self.timeout[id]? self.timeout[id]: false;\n\t\tvar item = self.networkList[id];\n\t\t//如果不存在 不做处理\n\t\tif(!item || isTimeout){\n\t\t\treturn false;\n\t\t}\n\t\tif(!time){\n\t\t\t//如果没有那么创建检测超时定时器\n\t\t\ttime = setTimeout(function(){\n\t\t\t\t//接口返回超时\n\t\t\t\titem.isTimeout = true;\n\t\t\t\titem.timeout = timeout;\n\t\t\t\titem.isError = true;\n\t\t\t\titem.errorContent = '接口响应超时，超时时间:'+timeout+'(ms)';\n\t\t\t\t//这里直接完成添加到超时列表 停止后续处理\n\t\t\t\tself._handleDoneXML(id)\n\t\t\t\tself.timeoutRequest[id] = true\n\t\t\t},timeout)\n\t\t}else{\n\t\t\t//如果存在 则说明已经回调 取消超时定时器\n\t\t\tclearTimeout(time)\n\t\t}\n\t}\n\t/*\n\t\t处理请求完成的数据\n\t\t@id:拦截请求唯一ID\n\t */\n\t_handleDoneXML(id){\n\t\tvar self = this;\n\t\tvar ajaxItem = tool.extend({},self.networkList[id]);\n\t\tvar { onHandleJudgeResponse ,onHandleRequestData ,onHandleResponseData } = self._config;\n\t\t//空的对象不做处理\n\t\tif(tool.isEmptyObject(ajaxItem)){\n\t\t\treturn false;\n\t\t}\n\t\t/******   这里开始处理数据  *****/\n\t\t//判断当前请求数据url是否需要屏蔽\n\t\tif(!self._handleJudgeDisbale(ajaxItem)){\n\t\t\tself.networkList[id];\n\t\t\treturn false;\n\t\t}\n\t\t//\n\t\t//如果存在自定义处理 请求data配置\n\t\tif(onHandleRequestData){\n\t\t\ttry{\n\t\t\t\tajaxItem.handleReqData = onHandleRequestData(ajaxItem)\n\t\t\t}catch(err){\n\t\t\t\tajaxItem.handleReqData = '自定义handleRequestData出错:'+err\n\t\t\t}\n\t\t}\n\t\t//判断状态码是否出错\n\t\tvar status = ajaxItem.status;\n\t\tif(!networkTool.validateStatus(status) && !ajaxItem.isError){\n\t\t\tajaxItem.isError = true;\n\t\t\tajaxItem.errorContent = 'http请求错误!错误状态码:'+status;\n\t\t}\n\t\t//如果存在自定义处理响应数据是否出错\n\t\tif(onHandleJudgeResponse && !ajaxItem.isError){\n\t\t\ttry{\n\t\t\t\tajaxItem.isError = onHandleJudgeResponse(ajaxItem);\n\t\t\t\tif(ajaxItem.isError){\n\t\t\t\t\tajaxItem.errorContent = ajaxItem.isError;\n\t\t\t\t\tajaxItem.isError = true\n\t\t\t\t}\n\t\t\t}catch(err){\n\t\t\t\tajaxItem.isError = true\n\t\t\t\tajaxItem.errorContent = '自定义判断handleJudgeResponse出错:'+err;\n\t\t\t}\n\t\t}\n\t\t//如果存在自定义处理 响应data配置\n\t\tif(onHandleResponseData && !ajaxItem.isError){\n\t\t\ttry{\n\t\t\t\tajaxItem.handleResData = onHandleResponseData(ajaxItem)\n\t\t\t}catch(err){\n\t\t\t\tajaxItem.handleResData = '自定义handleResponseData出错:'+err\n\t\t\t}\n\t\t}\n\t\t//通知上传\n\t\tself.noticeReport(ajaxItem);\n\t\t//上报后删除记录\n\t\tdelete self.networkList[id];\n\t}\n\t/*\n\t\t判断该请求是否是屏蔽请求\n\t\tparams\n\t\t\tajaxInfo :即将上报的数据\n\t\treturn\n\t\t\t忽略返回 false;\n\t\t\t不忽略返回 true\n\t */\n\t_handleJudgeDisbale(ajaxInfo){\n\t\tvar { ignoreRequestList } = this._config;\n\t\t//判断是否是是屏蔽url\n\t\tif(ignoreRequestList && tool.isArray(ignoreRequestList)){\n\t\t\tvar url = ajaxInfo.url\n\t\t\tvar unReport = false;\n\t\t\tignoreRequestList.forEach(function(item){\n\t\t\t\tif(url.indexOf(item) > -1){\n\t\t\t\t\tunReport = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(unReport){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t//判断是否是keepObserver的上报请求\n\t\tif(ajaxInfo.reqHead && ajaxInfo.reqHead['keepObserver-reportAjax']){\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*\n\t\t停止监听\n\t */\n\tstopObserver(){\n\t\twindow.XMLHttpRequest.prototype.open = this._open\n\t\twindow.XMLHttpRequest.prototype.send = this._send\n\t\twindow.XMLHttpRequest.prototype.setRequestHeader = this._setRequestHeader\n\t\tthis._open = null;\n\t\tthis._send = null\n\t\tthis.__setRequestHeader = null;\n\t}\n\t/*\n\t\t开始监听\n\t */\n\tstartObserver(){\n\t\t//开启网络拦截监控\n\t\tthis._init();\n\t}\n\t/********************  上报相关  ***********************/\n\t//注册上报监听\n\taddReportListener(callback){\n\t\tif(callback){\n\t\t\tthis.eventListener.push(callback)\n\t\t}\n\t}\n\t//通知上报\n\tnoticeReport(content){\n\t\tif(this.eventListener.length === 0){\n\t\t\treturn false;\n\t\t}\n\t\t//通知上报\n\t\tthis.eventListener.map(function(item){\n\t\t\tif(tool.isFunction(item)){\n\t\t\t\titem(content);\n\t\t\t}\n\t\t})\n\t}\n}\n\n\n\n\nexport default KeepObserverNetwork\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/network/index.js","\n/*\n   Vconsole\n   * generate an unique id string (32)\n   * @private\n   * @return string\n*/\nexport function getUniqueID() {\n    var id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    });\n    return id;\n}\n\n\n/*\n\t处理URL\n\t分离base url 和params\n\t@return {\n\t\turl:  string\n\t\tparams: object or string('')\n\t}\n */\n\nexport function handleReqUrl(url){\n\t//处理下解码URL\n\turl = window.decodeURIComponent(url);\n\tvar params = '';\n\tvar baseUrl = '';\n\t//判断URL后面是否存在参数\n\tif(url.indexOf('?') === -1){\n\t\tbaseUrl = url;\n\t}else{\n\t\tvar query = url.indexOf('?');\n\t\tbaseUrl = url.substring(0,query);\n\t\tquery = url.substring(query+1,url.length);\n\t\tparams = {};\n        query = query.split('&'); // => ['b=c', 'd=?e']\n        for (let q of query) {\n          \tq = q.split('=');\n          \tparams[ q[0] ] = q[1];\n        }\n\t}\n\treturn {\n\t\turl:baseUrl,\n\t\tparams:params\n\t}\n}\n\n/*\n\t检查状态码是否正确\n */\nexport function validateStatus(status) {\n    return status >= 200 && status < 300;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/network/tool.js","\n\n\n\n/*\n \n \tobserver System 实例默认配置数据\n */ \n\n\nexport default {\n\t//是否每天只记录一次\n\tisOneDay:true,\n\t//是否启动性能分析 \n\tisPerformance:true,\n\t//是否检查缓存读取内容\n\tisPerformanceRequest:true,\n\t//获取到system信息是否立即上报\n\timmediatelyiReport:true,\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/system/defaultConfig.js","\n\nimport defaultConfig from './defaultConfig.js';\nimport * as tool from '../../tool/index.js';\n\n\n// 获取系统信息\nclass KeepObserverSystem {\n\t//构造函数\n\tconstructor(config){\n\t\t//存混合配置\n\t\tthis._config  = tool.extend(defaultConfig,config)\n\t\t//系统信息\n\t\tthis._systemInfo = false;\n\t\t//上报名\n\t\tthis._typeName = 'system'\n\t\t//监听列表\n\t\tthis.eventListener = [];\n\t\t//开始获取系统信息\n\t\tthis.getSystemInfo();\n\t}\n\t//获取系统信息\n\tgetSystemInfo(){\n\t\tvar self = this;\n\t\tvar oneDayFlag = this.checkIsOneDay()\n\t\t//判断是否每天最多获取上传一次\n\t\tif(this._config.isOneDay && oneDayFlag){\n\t\t\treturn false;\n\t\t}\n\t\t//开始获取系统信息\n\t\tvar systemInfo = window.navigator.userAgent\n\t\tif(self._config.isPerformance){\n\t\t\tself.getWebPerformance(function(Result){\n\t\t\t\tself._systemInfo = Result\n\t\t\t\tself._systemInfo.systemInfo = systemInfo\n\t\t\t\t//上报\n\t\t\t\tself.noticeReport(self._systemInfo);\n\t\t\t\t//记录\n\t\t\t\tself.recordReport();\n\t\t\t})\n\t\t}\n\t}\n\t//获取首屏性能分析\n\tgetWebPerformance(onCallback){\n\t\tvar self = this;\n\t\t//异步实现,等待完全加载完成\n\t\tvar performance =   function(){\n\t\t\tvar info = {}\n\t\t\tlet performance = window.performance || window.msPerformance || window.webkitPerformance;\n\t\t\tvar timing = window.performance && window.performance.timing;\n\t\t\tvar navigation = window.performance && window.performance.navigation;\n\t\t\t//获取性能分析\n\t\t\tif (performance && timing ){\n\t\t\t\t//重定向次数：\n\t\t\t\tinfo.redirectCount = (navigation?navigation.redirectCount+'次':'未知');\n\t\t\t\t//跳转耗时：\n\t\t\t\tinfo.redirectTime = (timing.redirectEnd - timing.redirectStart)+'ms';\n\t\t\t\t//APP CACHE 耗时：\n\t\t\t\tinfo.appcacheTime = Math.max(timing.domainLookupStart - timing.fetchStart, 0)+'ms';\n\t\t\t\t//DNS 解析耗时：\n\t\t\t\tinfo.dns = (timing.domainLookupEnd - timing.domainLookupStart)+'ms';\n\t\t\t\t//TCP 链接耗时：\n\t\t\t\tinfo.tcp = (timing.connectEnd - timing.connectStart)+'ms';\n\t\t\t\t//等待服务器响应耗时（注意是否存在cache）：\n\t\t\t\tinfo.request = (timing.responseStart - timing.requestStart)+'ms';\n\t\t\t\t//内容加载耗时（注意是否存在cache）:\n\t\t\t\tinfo.response = (timing.responseEnd - timing.responseStart)+'ms';\n\t\t\t\t//总体网络交互耗时，即开始跳转到服务器资源下载完成：\n\t\t\t\tinfo.network = (timing.responseEnd - timing.navigationStart)+'ms';\n\t\t\t\t//渲染处理：\n\t\t\t\tinfo.DOMrender = ((timing.domComplete || timing.domLoading) - timing.domLoading)+'ms';\n\t\t\t\t//抛出 load 事件：\n\t\t\t\tinfo.onloadTime = (timing.loadEventEnd - timing.loadEventStart)+'ms';\n\t\t\t\t//总耗时：\n\t\t\t\tinfo.total = ((timing.loadEventEnd || timing.loadEventStart || timing.domComplete || timing.domLoading) - timing.navigationStart)+'ms';\n\t\t\t\t//可交互：\n\t\t\t\tinfo.DOMactive = (timing.domInteractive - timing.navigationStart)+'ms';\n\t\t\t\t//请求响应耗时，即 T0，注意cache：\n\t\t\t\tinfo.webResponse = (timing.responseStart - timing.navigationStart)+'ms';\n\t\t\t\t//首次出现内容，即 T1：\n\t\t\t\tinfo.webLoad = (timing.domLoading - timing.navigationStart)+'ms';\n\t\t\t\t//内容加载完毕，即 T3：\n\t\t\t\tinfo.webLoadEnd = (timing.loadEventEnd - timing.navigationStart)+'ms';\n\t\t\t}\t\n\t\t\t//是否获取加载资源内容\n\t\t\tif(self._config.isPerformanceRequest){\n\t\t\t\tinfo.requestPerformance = [];\n\t\t\t\tif(performance.getEntries){\n\t\t\t\t\tvar requestPerformance = performance.getEntries()\n\t\t\t\t\t//只检查initiatorType  script css xmlhttprequest\n\t\t\t\t\tif(tool.isArray(requestPerformance)){\n\t\t\t\t\t\trequestPerformance.map(function(item){\n\t\t\t\t\t\t\tif(item.initiatorType){\n\t\t\t\t\t\t\t\tvar perInfo = {\n\t\t\t\t\t\t\t\t\ttype:item.initiatorType,\n\t\t\t\t\t\t\t\t\tname:item.name,\n\t\t\t\t\t\t\t\t\ttime:item.duration.toFixed(2)+'ms',\n\t\t\t\t\t\t\t\t\tsize:(item.encodedBodySize/1000).toFixed(2)+'kb'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tinfo.requestPerformance.push(perInfo)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tif(onCallback){\n\t\t\t\t\t\tonCallback(info)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//挂载在 window.onload 中\n\t\tif (typeof window.addEventListener != 'undefined') { \n\t\t\twindow.addEventListener('load',function(){\n\t\t\t\tsetTimeout(performance,0)\n\t\t\t},false); \n\t\t} else { \n\t\t\twindow.attachEvent('onload',function(){\n\t\t\t\tsetTimeout(performance,0)\n\t\t\t}) \n\t\t} \n\t}\n\t//验证今天是否已经获取上传了一次用户信息了\n\tcheckIsOneDay(){\n\t\tvar reportDate = tool.getStorage('systemRecordReportDate');\n\t\tvar date = tool.dateFormat(new Date,'yyyy-MM-dd')\n\t\t//如果没获取上报过\n\t\tif(!reportDate){\n\t\t\treturn false;\n\t\t}else if(reportDate !== date){\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t//记录当天已经上报\n\trecordReport(){\n\t\tif(this._config.isOneDay){\n\t\t\tvar date = tool.dateFormat(new Date,'yyyy-MM-dd');\n\t\t\ttool.setStorage('systemRecordReportDate',date)\n\t\t}\n\t}\n\t/***************  上报相关  ******************/\n\t//注册上报监听\n\taddReportListener(callback){\n\t\tif(callback){\n\t\t\tthis.eventListener.push(callback)\n\t\t}\n\t}\n\t//通知上报\n\tnoticeReport(content){\n\t\tif(this.eventListener.length === 0){\n\t\t\treturn false;\n\t\t}\n\t\t//通知上报\n\t\tthis.eventListener.map(function(item){\n\t\t\tif(tool.isFunction(item)){\n\t\t\t\titem(content);\n\t\t\t}\n\t\t})\n\t}\n}\n\n\n\n\nexport default KeepObserverSystem\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/system/index.js","\n\n\n\n/*\n \n \tobserver vue 实例默认配置数据\n */ \nexport default {\n\t//是否启动性能分析   暂时未做\n\tisPerformance:true,\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/vue/defaultConfig.js","\n\nimport defaultConfig from './defaultConfig.js';\nimport * as tool from '../../tool/index.js';\n\n\n\n// 获取系统信息\nclass KeepObserverVue {\n\t//构造函数\n\tconstructor(config){\n\t\t//存混合配置\n\t\tthis._config  = tool.extend(defaultConfig,config)\n\t\t//上报名\n\t\tthis._typeName = 'vue'\n\t\t//vue实例\n\t\tthis._vue = this._config.vueInstance;\n\t\t//监听列表\n\t\tthis.eventListener = [];\n\t\t//启动\n\t\tthis._init();\n\t}\n\t/*\n\t\t开始监控vue\n\t */\n\t_init(){\n\t\tvar self = this;\n\t\tif(self._vue.config){\n\t\t\tself._vue.config.errorHandler = (...args) => {self._handleVueError(...args)}\n\t\t}\n\t}\n\t/*\n\t\t处理监控vue错误信息\n\t */\n\t_handleVueError(err,vm,info){\n\t\tvar self = this;\n\t\tvar errInfo = {}\n\t\terrInfo.infoMsg =  tool.toString(info);\n\t\t//是否存在堆栈信息\n\t\tif(tool.isObject(err) && err.stack && err.message){\n\t\t\terrInfo.errMsg = tool.toString(err.message)\n\t\t\terrInfo.stackMsg = tool.toString(err.stack)\n\t\t}else{\n\t\t\terrInfo.errMsg = tool.toString(err);\n\t\t}\n\t\terrInfo.isError = true\n\t\t//上报\n\t\tself.noticeReport(errInfo)\n\t}\n\t/*\n\t\t停止监听\n\t */\n\tstopObserver(){\n\t\tif(this._vue.config){\n\t\t\tthis._vue.config.errorHandler = null;\n\t\t}\n\t}\n\t/*\n\t\t开始监听\n\t */\n\tstartObserver(){\n\t\t//开启vue错误监听\n\t\tthis._init();\n\t}\n\t/***************  上报相关  ******************/\n\t//注册上报监听\n\taddReportListener(callback){\n\t\tif(callback){\n\t\t\tthis.eventListener.push(callback)\n\t\t}\n\t}\n\t//通知上报\n\tnoticeReport(content){\n\t\tif(this.eventListener.length === 0){\n\t\t\treturn false;\n\t\t}\n\t\t//通知上报\n\t\tthis.eventListener.map(function(item){\n\t\t\tif(tool.isFunction(item)){\n\t\t\t\titem(content);\n\t\t\t}\n\t\t})\n\t}\n}\n\n\n\n\nexport default KeepObserverVue\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/vue/index.js","\n\nimport * as tool from '../tool/index.js';\n\n\n\n\n/*\n\t处理url挂载参数\n */\nvar handleUrlParams = function(url,params){\n\tif(url.indexOf('?') === -1){\n\t\turl += '?';\n\t}else{\n\t\turl += (url.indexOf('&') === -1)? '&':'';\n\t}\n\tfor(var key in params){\n\t\turl += key+'=';\n\t\turl += params[key].toString()+'&'\n\t}\n\turl = url.substring(0,url.length -1);\n\treturn url;\n}\n\n\n/*\n\t上报ajax请求\n\tparams\n\t\tconfig = {\n\t\t\turl: \t\t\t上报url\n\t\t\tdata:  \t\t\t上报数据\n\t\t\tparams: \t\t上报url上是否挂载参数\n\t\t\tcustomeHead:    上报自定义请求头     \n\t\t}\n\treturn \n\t\tpromise\n */\nvar AjaxServer = function(config){\n\t//创建一个Promise回调\n\tvar defer  = new Promise(function(res,rej){\n\t\tvar { url , data, params, customeHead } = config;\n\t\tvar resHead = {};\n\t\t//判断数据\n\t\tif(!url || !data){\n\t\t\trej('上报数据失败:上报url和data不能为空')\n\t\t\treturn false;\n\t\t}\n\t\t//是否需要挂载参数\n\t\tif(params && tool.isObject(params)){\n\t\t\turl = handleUrlParams(url,params);\n\t\t}\n\t\t//开始请求\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST',url,true)\n\t\t//处理请求头\n\t\tvar xhrHead  = {\n\t\t\t'Content-Type': 'application/json;charset=UTF-8',\n\t\t};\n\t\tif(customeHead && tool.isObject(customeHead)){\n\t\t\txhrHead = tool.extend(xhrHead,customeHead)\n\t\t}\n\t\txhrHead['keepObserver-reportAjax'] = 'yes';\n\t\tfor(var key in xhrHead){\n\t\t\txhr.setRequestHeader(key,xhrHead[key]);\n\t\t}\n\t\t//监听回调\n\t\txhr.onreadystatechange = function(e) {\n            if (xhr.readyState == 4) {\n            \t//防止跨域等问题  触发错误导致死循环\n            \ttry{\n            \t\t//处理响应头\n\t            \tif(xhr && xhr.getAllResponseHeaders){\n\t \t\t          \tvar header = xhr.getAllResponseHeaders() || '',\n\t\t\t             \theaderArr = header.split(\"\\n\");\n\t\t\t          \t//提取数据\n\t\t\t          \tfor (let i=0; i<headerArr.length; i++) {\n\t\t\t            \tlet line = headerArr[i];\n\t\t\t            \tif (!line) { continue; }\n\t\t\t            \tlet arr = line.split(': ');\n\t\t\t            \tlet key = arr[0],\n\t\t\t                value = arr.slice(1).join(': ');\n\t\t\t            \tresHead[key] = value;\n\t\t\t          \t}\n\t            \t}\n\t                if (xhr.status == 200) {\n\t                \tvar result = {\n\t                \t\thead:resHead,\n\t                \t\tdata:xhr.responseText,\n\t                \t}\n\t                    res(result)\n\t                } else {\n\t                    rej('请求出现错误!错误状态码:'+xhr.status)\n\t                }\n            \t}catch(e){\n            \t\trej('请求出现错误!'+e)\n            \t}\n            \t//end\n            }\n        };\n        xhr.onerror = function(e){\n        \trej('请求出现错误!'+e)\n        }\n        //发送数据\n        var data = JSON.stringify(data);\n        xhr.send(data);\n\t})\n\treturn defer\n}\n\n\n\nexport default AjaxServer\n\n\n\n// WEBPACK FOOTER //\n// src/report/ajax.js","\n/*\n \n \treport 实例默认配置数据\n\tconfig params:\n */ \n\nconst type = ['unKownType','system','log','network','vue'];\n\n\nexport default {\n\t/******************** 公共相关配置 *******************/\n\t//上报的类型\n\t$observer_Type: type,\n\t//如果取不到缓存长度的默认长度\n\tmax_cache: 3,\n\n\t/******** system相关配置   *********/\n\t//默认system数组缓存长度\n\tmax_system_cache: 1,\n\t//缓存数据满了是否上传\n\tmax_system_fillIsReport: true,\n\n\t/******** network相关配置   *********/\n\t//默认network数组缓存长度\n\tmax_network_cache: 5,\n\t//缓存数据满了是否上传\n\tmax_network_fillIsReport: false,\n\n\t/******** log相关配置   *********/\n\t//默认log数组缓存长度\n\tmax_log_cache: 15,\n\t//缓存数据满了是否上传\n\tmax_log_fillIsReport: false,\n\n\t/******** vue相关配置   *********/\n\t//默认vue数组缓存长度\n\tmax_vue_cache: 1,\n\t//缓存数据满了是否上传\n\tmax_vue_fillIsReport: true,\n\t/*********************   上传相关   ********************/\n\t//上传服务器的url列表  \t\tarray\n\treportUrl:false,  \t\t\n\t//上传失败回调\t\t\t\tfunction (reportInfo,reportUrl(有可能有))\n\tonReportFail:false,\n\t//上传前自定义设置url   \tfunction (reportUrl)   return new URl\n\tonReportBeforeSetUrl:false,\n\t//上传前自定义设置请求头， \tfunction (reportUrl)   return headData object\n\tonReportBeforeSetHead:false,\n\t//上传服务器前回调钩子  \tfunction (reportInfo,reportUrl,repHead)\n\tonReportBeforeHook:false, \n\t//上传服务器后返回处理钩子  \tfunction (resultInfo,reportUrl,resHead)\n\tonReportResultHook:false,\n}\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/report/defaultConfig.js","\n\nimport KeepObserverDefault from '../default/index.js';\n\n\nimport defaultConfig from './defaultConfig.js';\nimport * as tool from '../tool/index.js';\nimport AjaxServer from './ajax.js';\n\n\n\n// 上报服务器相关\nclass KeepObserverReport extends KeepObserverDefault {\n\t//构造函数\n\tconstructor(config){\n\t\tsuper(config)\n\t\t//存混合配置\n\t\tthis.$report_config  = tool.extend(defaultConfig,config)\n\t\t//上传数据保存\n\t\tthis.reportData = {};\n\t\t//用户自定义上传参数\n\t\tthis._customeInfo = false;\n\n\t\t//当前是否处于开发模式\n\t\tthis.develop = this.$report_config.develop;\n\t\tthis.developGetMsgLog = this.$report_config.developGetMsgLog;\n\t\tthis.develogDeleteLog = this.$report_config.develogDeleteLog;\n\t\tthis.develogDiscardLog = this.$report_config.develogDiscardLog\n\n\n\t\t//初始化\n\t\tthis._init();\n\t}\n\t/********************   对外提供函数  **********************/\n\t/*\n\t\t接受需要上报的内容\n\t\tparams  \n\t\t@object  = {\n\t\t\t@ .typeName string   \t  (no null)\t      上报类型名\n\t\t\t@ .data  array or object  (no null) \t  上报内容\n\t\t}\n\t\t@ .control null and object = {\n\t\t\t@ .lazy       Boolean          \t\t      是延时上报(由手动上传合并上报或者又下一次该上报合并上报) 不传立即上报\n\t\t\t@ .isError    Boolean\t\t\t\t\t  是否是出错信息 (保留未启用)\n\t\t\t@ .baseExtend Boolean\t\t\t\t\t  是否合并基础监控信息包括log以及network信息一起上报\n\t\t\t@ .preDelete  Boolean                     是否删除之前保存typeName的缓存数据\n\t\t\t@ .ignore     Boolean\t\t\t\t\t  是否忽略本条数据\n\t\t}\n\t */\n\t$getReportContent(params,control){\n\t\t//判断数据合法性\n\t\tif(!params || !params.typeName || !params.data || (!tool.isArray(params.data) && !tool.isObject(params.data))){\n\t\t\treturn false;\n\t\t}\n\t\t//添加上传时间搓\n\t\tparams.reportTime = new Date().getTime();\n\t\t//是否是开发模式需要打印\n\t\tif(this.develop && this.developGetMsgLog){\n\t\t\tvar log = tool.extend({},params)\n\t\t\tlog.title= '获得'+log.typeName+\"类型监控数据\";\n\t\t\tthis.$devLog(log)\n\t\t}\n\t\t//是否删除之前保存的数据\n\t\tif(control && control.preDelete){\n\t\t\tthis._removeReportData(params.typeName)\n\t\t}\n\t\t//是否忽略本条数据\n\t\tif(control && control.ignore){\n\t\t\treturn false;\n\t\t}\n\t\t//保存到上报数据中\n\t\tvar cacheLen = this._saveReportData(params);\n\t\tvar maxCache = this.$report_config['max_'+params.typeName+'_cache'];\n\t\tvar isReport = this.$report_config['max_'+params.typeName+'_fillIsReport'];\n\t\t//是否立即上报 或者缓存已满上报\n\t\tif( (control && !control.lazy) || (isReport && cacheLen === maxCache)){\n\t\t\t//是否合并上报\n\t\t\tthis._handleReport(params.typeName,control);\n\t\t}\n\t}\n\t/*\n\t\t接受自定义上报内容\n\t\tparams type object\n\t\t合并到this._customeInfo中\n\t */\n\t$getCustomeReport(params){\n\t\t//判断数据正确性\n\t\tif(!params || !tool.isObject(params) || tool.isEmptyObject(params)){\n\t\t\treturn false;\n\t\t}\n\t\tif(!this._customeInfo){\n\t\t\tthis._customeInfo = {};\n\t\t}\n\t\t//设置用户自定义上报内容\n\t\tthis._customeInfo = tool.extend(this._customeInfo,params);\n\t}\n\t/****************   内部使用函数  *************/\n\t/*\n\t\t初始化上报类参数\n\t\t复制this.reportData并从strong里面复原数据\n\t\t如果是开发模式 替换window.console.log\n\t */\n\t_init(){\n\t\tvar self = this;\n\t\t//初始化this.reportData\n\t\tvar handleType = self.$report_config.$observer_Type\n\t\thandleType.forEach( function(type) {\n\t\t\tvar cacheData = tool.getStorage(type)\n\t\t\tself.reportData[type] = [];\n\t\t\tif(cacheData){\n\t\t\t\tself.reportData[type] = cacheData\n\t\t\t}\n\t\t});\n\t}\n\t/* \n\t\t保存处理上报数据\n\t\tparams type object\n\t\t@ .typeName string   \t  (no null)\t      上报类型名\n\t\t@ .data  array or object  (no null) \t  上报内容\n\t\t@ .lazy bollen          \t\t\t\t  是延时上报(由手动上传合并上报或者又下一次该上报合并上报) 不传立即上报\n\t\t**********************************\n\t\t# return  当前保存数据长度\n\t */\n\t_saveReportData(params){\n\t\tvar type = params.typeName\n\t\t//如果没有该上报类型,那么属于未知内容\n\t\tif(!this.reportData[type]){\n\t\t\ttype = 'unKownType'\n\t\t}\n\t\tvar reportData = this.reportData[type];\n\t\t//是否延时上报,如果没有添加到上报数据中\n\t\tvar maxCache = this.$report_config['max_'+type+'_cache'];\n\t\tmaxCache = maxCache? maxCache:this.$report_config['max_cache'];\n\t\t//如果当前存储超过长度 那么弹出最早的数据\n\t\tif(reportData.length +1 >maxCache){\n\t\t\tvar discard = reportData.shift()\n\t\t\t//开发模式打印\n\t\t\tif(this.develop && this.develogDiscardLog){\n\t\t\t\tdiscard.title = type+'类型监控数据超出缓存长度丢弃内容';\n\t\t\t\tthis.$devLog(discard)\n\t\t\t}\n\t\t}\n\t\treportData.push(params)\n\t\tthis.reportData[type] = reportData;\n\t\t//保存到locationStorage中\n\t\ttool.setStorage(type,reportData)\n\t\treturn reportData.length;\n\t}\n\t/*\n\t\t删除保存的上报数据\n\t\t@params type string    上报类型\n\t */\n\t_removeReportData(type){\n\t\tif(this.reportData[type]){\n\t\t\tthis.reportData[type] = [];\n\t\t\ttool.removeStorage(type)\n\t\t\t//开发模式下打印\n\t\t\tif(this.develop && this.develogDeleteLog){\n\t\t\t\tthis._$devLog(type+'类型监控数据已清除')\n\t\t\t}\n\t\t}\n\t}\n\t/********************   上报相关   **********************/\n\t/*\n\t\t生成上报数据头\n\t\tparams:\n\t\t\t@ .type  string\t\t\t\t\t\t\t\t上报数据类型\n\t\t\t@ .control object \t\t\t\t\t\t\t上报控制\n\t\treturn     \n\t\t\treportData  {\n\t\t\t\t//以下参数必定存在\n\t\t\t\t@ .type  string\t\t\t\t\t\t\t上报数据类型\n\t\t\t\t@ .project  string              \t\t上报项目名\n\t\t\t\t@ .projectVersion string \t\t\t\tkeepObserver版本\n\t\t\t\t@ .reportTime  number  \t\t\t\t\t上报时间时间搓\n\t\t\t\t@ .data array or data                   上报内容\n\t\t\t\t//一下参数可能存在\n\t\t\t\t@ .customeInfo   all  \t\t\t\t\t用户自定义设置上传参数 \n\t\t\t}     \t\t\t\t\t\n\t */\n\t_createReportData(type,control){\n\t\tvar self = this;\n\t\tvar reportData = {};\n\t\t//添加基本信息\n\t\treportData.reportType = type;\n\t\treportData.project = self._project;\n\t\treportData.projectVersion = self._version\n\t\treportData.reportTime = new Date().getTime();\n\t\t//处理自定义信息\n\t\tif(self._customeInfo){\n\t\t\treportData.customeInfo = tool.extend({},self._customeInfo);\n\t\t}\n\t\t//处理上报数据  是否合并上报\n\t\tif(control.baseExtend){\n\t\t\treportData.data = {}\n\t\t\tfor(var key in self.reportData){\n\t\t\t\tvar value = self.reportData[key];\n\t\t\t\tif(tool.isArray(value) && value.length > 0){\n\t\t\t\t\treportData.data[key] = tool.extend({},value);\n\t\t\t\t\t//删除相关数据\n\t\t\t\t\tself._removeReportData(key)\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\treportData.data = tool.extend({},self.reportData[type]);\n\t\t\tself._removeReportData(type)\n\t\t}\n\t\t//开发模式下打印上报数据\n\t\tif(self.develop){\n\t\t\tvar log = tool.extend({},reportData)\n\t\t\tlog.title = type+\"类型即将上报服务器,上报内容在data中\"\n\t\t\tself.$devLog(log)\n\t\t}\n\t\treturn reportData\n\t}\n\t/*\n\t\t调用钩子\n\t\t@arguments[0] = onHooK\n\t\t@arguments[...] = params\n\t\treturn\n\t\t\tonHook result\n\t */\n\t_handleHook(){\n\t\tvar args = tool.toArray(arguments);\n\t\tif(!args || args.length === 0 || !tool.isFunction(args[0]) ){\n\t\t\treturn false;\n\t\t}\n\t\tvar onHook = args[0];\n\t\tvar params = args.slice(1,args.length);\n\t\ttry{\n\t\t\tvar result = onHook(params);\n\t\t}catch(err){\n\t\t\t//报错\n\t\t\tthis.$devError(onHook.name+'回调钩子运行出现错误:'+err)\n\t\t}\n\t\treturn result\n\t}\n\t/*  \n\t\t处理上传失败\n\t\tparams\n\t\t\tonFail      function        \t失败的回调 没有则忽略直接跳过\n\t\t\treportData \tobj or arr          需要上传的数据\n\t\t\treportUrl \tstring     \t\t\t上传的url地址 (有可能存在)\n\t */\n\t_handleReportFail(onFail,reportData,reportUrl){\n\t\tif(!onFail){\n\t\t\treturn false;\n\t\t}\n\t\ttry{\n\t\t\tonFail(reportData,reportUrl)\n\t\t}catch(e){\n\t\t\tthis.$devError('上传错误回调钩子运行出现错误:'+err)\n\t\t}\n\t}\n\t/*\n\t\t处理上报\n\t\tparams \n\t\t\ttype string    \t\t上报类型\n\t\t\tcontrol object \t\t上报控制\n\t */\n\t_handleReport(type,control){\n\t\tvar self = this;\n\t\t//如果未传入数据类型\n\t\tif(!type || !tool.isString(type)){\n\t\t\treturn false;\n\t\t}\n\t\t//获得上传数据\n\t\tvar reportData = self._createReportData(type,control)\n\t\t//上传到服务器\n\t\tvar { \n\t\t\t\treportUrl,\n\t\t\t\tonReportFail,\n\t\t\t\tonReportBeforeSetUrl,\n\t\t\t\tonReportBeforeSetHead,\n\t\t\t\tonReportBeforeHook,\n\t\t\t\tonReportResultHook,\n\t\t\t} = this.$report_config\n\t\t//如果没有设置上传URL 那么停止上传\n\t\tif(!reportUrl || !tool.isArray(reportUrl)){\n\t\t\tself._handleReportFail(onReportFail,reportData,null)\n\t\t\treturn false;\n\t\t}\n\t\t//遍历URL上传列表\n\t\t//开始依次上传\n\t\treportUrl.map(function(item){\n\t\t\tvar reportConfig = {};\n\t\t\t//是否有上传前修改URL回调\n\t\t\tif(onReportBeforeSetUrl){\n\t\t\t\tvar url = self._handleHook(onReportBeforeSetUrl,item);\n\t\t\t}else{\n\t\t\t\turl = item;\n\t\t\t}\n\t\t\tif(!tool.isString(url)){\n\t\t\t\tself._handleReportFail(onReportFail,reportData,null)\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treportConfig.url = url;\n\t\t\t//获取自定义请求头\n\t\t\tvar  customeHead = onReportBeforeSetHead?self._handleHook(onReportBeforeSetHead,item):false;\n\t\t\tif(customeHead && tool.isObject(customeHead) && !tool.isEmptyObject(customeHead)){\n\t\t\t\treportConfig.customeHead = customeHead\n\t\t\t}\n\t\t\t//获取请求\n\t\t\treportConfig.data = reportData;\n\t\t\tself._handleHook(onReportBeforeHook,reportData,reportConfig.url,reportConfig.customeHead)\n\t\t\t//上传到服务器\n\t\t\ttry{\n\t\t\t\tAjaxServer(reportConfig).then(function(result){\n\t\t\t\t\tself._handleHook(onReportResultHook,result.data,reportConfig.url,result.head);\n\t\t\t\t},function(err){\n\t\t\t\t\tself._handleReportFail(onReportFail,reportData,reportConfig.url);\n\t\t\t\t})\n\t\t\t}catch(err){\n\t\t\t\t//上传报错\n\t\t\t\tself.$devError('上传数据出现错误:'+err)\n\t\t\t}\n\t\t\t//end\n\t\t})\n\t\t// map url end\n\t}\n}\n\n\n\n\nexport default KeepObserverReport\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/report/index.js"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzDA;AA8BA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAiBA;AASA;AAMA;AAGA;AAMA;AASA;AAsBA;AAGA;AAgBA;AAQA;AAQA;AAoBA;AACA;AACA;AAzLA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChPA;AACA;AADA;AACA;AACA;AACA;;;AAGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;AATA;AACA;AACA;AAEA;AACA;AACA;AAMA;;;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAiCA;AACA;AACA;;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AA5GA;AACA;AAgHA;;;;;;;;;;;;;;;;;AC9HA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AASA;;;;;;;;;;;;;ACpCA;AACA;AADA;AACA;AAEA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAqCA;;;;;;;;;;;;;ACvCA;AACA;AADA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AAiCA;;;;;;;;;;;;;ACjCA;AACA;AADA;AACA;AAEA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AA0BA;;;;;;;;;;;;;AC5BA;AACA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAmCA;;;;;;;;;;;;;;ACjCA;AACA;;;;AAKA;AACA;AACA;AAFA;;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;AADA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;;;;;;;;;;;;;;AC9MA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;;;;ACLA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAKA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAgBA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;;;;;;;;;;;;AChYA;AAkBA;AA4BA;AACA;AArDA;;;;;;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAMA;AAAA;AACA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;;;;;;;;ACnDA;AACA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;AADA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;;;;;;;;;;;;;;AC/JA;AACA;;;AAGA;AACA;AACA;AAFA;;;;;;;;;;;;;;;ACNA;AACA;;;AAAA;AACA;AADA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;;;;;;;;;;;;;ACtFA;AACA;AADA;AACA;;;AAIA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;AC9GA;AACA;;;;;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;;;;;;;;;;;;;;;ACRA;AACA;;;AAEA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;;;;;;;AAGA;AACA;;;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAjBA;AAkBA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAnTA;AACA;AAwTA;;;;;;;;;;;A","sourceRoot":""}